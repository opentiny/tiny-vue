{
  "name": "@opentiny/vue",
  "version": "3.5.0",
  "uiVersion": "0.1.0",
  "srcVersion": "0.1.0",
  "themeVersion": "3.5.0",
  "description": "@opentiny/vue",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": ""
  },
  "keywords": [
    "vue",
    "Tiny Vue"
  ],
  "author": "Tiny Vue Team",
  "license": "MIT",
  "sideEffects": false,
  "scripts": {
    "dev:vue2": "npm run build:entry && vite",
    "dev:vue3": "npm run build:entry && lerna run dev --scope vue-example --stream",
    "postinstall": "lerna exec npm install --scope vue-example",
    "clean": "rimraf dist",
    "create:ui": "node build/create-ui.js",
    "create:mapping": "node build/create-mapping.js",
    "sync-icons": "node build/sync-icons.js",
    "build:ui2": "lerna run build:ui2 --scope @opentiny/vue*",
    "buildfuxi:ui2": "lerna run build:ui2 --scope @opentiny/vue-${componentName}",
    "build:icon2": "cross-env NODE_ENV=production node build/build-icon.js",
    "build:vue2": "npm run clean && npm i @opentiny/vue-theme --no-save && npm run create:mapping && npm run build:entry && npm run build:ui2 && npm run build:icon2",
    "buildfuxi:vue2": "npm run clean && npm run create:mapping && npm run build:entry && npm run buildfuxi:ui2 && npm run build:icon2",
    "build:ui3": "lerna run build:ui3 --scope @opentiny/vue*",
    "buildfuxi:ui3": "lerna run build:ui3 --scope @opentiny/vue-${componentName}",
    "build:icon3": "lerna run build:icon3 --scope vue-example --stream",
    "build:vue3": "npm run clean && npm i @opentiny/vue-theme --no-save && npm run create:mapping && npm run build:entry && npm run build:ui3 && npm run build:icon3",
    "buildfuxi:vue3": "npm run clean && npm run create:mapping && npm run build:entry && npm run buildfuxi:ui3 && npm run build:icon3",
    "build:entry": "node build/build-entry.js",
    "build": "npm run clean && npm run build:entry",
    "build:version": "cross-env TYPE=ui node build/build-version.js",
    "build:runtime-pc": "lerna run build:runtime-pc --scope vue-example",
    "build:runtime-icon": "lerna run build:runtime-icon --scope vue-example",
    "build:runtime": "npm run build:runtime-pc && npm run build:runtime-icon",
    "release3": "npm run release:ui3 && npm run release:vue3",
    "release:vue3": "cross-env NPM_TAG=~3.5.0 NPM_WAREHOUSE=prod VERSION_TAG=3.5.0 node build/release.js",
    "release:ui3": "cross-env NPM_TAG=~3.5.0 NPM_WAREHOUSE=prod VERSION_TAG=3.5.0 node build/release-ui.js",
    "release2": "npm run release:ui2 && npm run release:vue2",
    "release:vue2": "cross-env NPM_TAG=~2.5.0 NPM_WAREHOUSE=prod VERSION_TAG=2.5.0 node build/release.js",
    "release:ui2": "cross-env NPM_TAG=~2.5.0 NPM_WAREHOUSE=prod VERSION_TAG=2.5.0 node build/release-ui.js",
    "releasefuxi3": "npm run releasefuxi:ui3 && npm run releasefuxi:vue3",
    "releasefuxi:vue3": "cross-env NPM_TAG=~3.5.0 NPM_WAREHOUSE=prod VERSION_TAG=${version} node build/release.js",
    "releasefuxi:ui3": "cross-env NPM_TAG=~3.5.0 NPM_WAREHOUSE=prod VERSION_TAG=${version} node build/release-ui.js",
    "releasefuxi2": "npm run releasefuxi:ui2 && npm run releasefuxi:vue2",
    "releasefuxi:vue2": "cross-env NPM_TAG=~2.5.0 NPM_WAREHOUSE=prod VERSION_TAG=${version} node build/release.js",
    "releasefuxi:ui2": "cross-env NPM_TAG=~2.5.0 NPM_WAREHOUSE=prod VERSION_TAG=${version} node build/release-ui.js",
    "format": "prettier --write packages/**/*{.vue,.js,.jsx} example/src/**/*{.vue,.js,jsx} build/*.js example/test/*.jsx",
    "lint": "eslint packages/**/*{.vue,.js,.jsx} example/src/**/*{.vue,.js,.jsx} build/*.js --ignore-pattern \"packages/**/dist\" --ignore-pattern \"packages/**/node_modules\" --ignore-pattern \"packages/**/runtime\" --fix",
    "test": "lerna run test --scope vue-example --stream",
    "coverage": "lerna run coverage --scope vue-example --stream",
    "publishall": "node npm-publish.js",
    "clean:dep": "rm -rf node_modules */node_modules && rm -rf package-lock.json example/package-lock.json",
    "prepare": "husky install",
    "commit": "git-cz"
  },
  "devDependencies": {
    "@babel/cli": "^7.5.5",
    "@babel/core": "^7.18.13",
    "@babel/eslint-parser": "^7.19.1",
    "@babel/plugin-proposal-export-default-from": "^7.7.4",
    "@babel/plugin-proposal-export-namespace-from": "^7.7.4",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-jsx": "^7.2.0",
    "@babel/preset-env": "^7.18.10",
    "@better-scroll/core": "2.5.0",
    "@better-scroll/wheel": "2.5.0",
    "@commitlint/cli": "^17.3.0",
    "@commitlint/config-conventional": "^17.3.0",
    "@rollup/plugin-alias": "^3.1.9",
    "@rollup/plugin-babel": "^5.3.1",
    "@rollup/plugin-commonjs": "^22.0.2",
    "@rollup/plugin-node-resolve": "^13.3.0",
    "@rollup/plugin-replace": "^4.0.0",
    "@vitejs/plugin-vue2-jsx": "^1.0.3",
    "@vue/babel-plugin-jsx": "^1.1.0",
    "@vue/compiler-sfc": "^3.2.39",
    "@vue/composition-api": "1.2.2",
    "commitizen": "^4.2.5",
    "cropperjs": "^1.5.12",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^3.3.0",
    "echarts": "^5.3.3",
    "echarts-liquidfill": "3.1.0",
    "echarts-wordcloud": "2.0.0",
    "eslint": "^8.25.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-vue": "^9.6.0",
    "fs-extra": "^10.1.0",
    "glob": "^8.0.3",
    "husky": "^8.0.2",
    "lerna": "^5.4.2",
    "lint-staged": "^13.0.3",
    "prettier": "^2.7.1",
    "quill": "1.3.7",
    "rimraf": "^3.0.0",
    "rollup-plugin-postcss": "^2.0.3",
    "rollup-plugin-vue": "5.0.1",
    "rollup-plugin-vue-inline-svg": "~1.1.2",
    "sortablejs": "^1.10.1",
    "streamsaver": "^2.0.6",
    "vite": "^3.0.9",
    "vite-plugin-md2vue2": "^2.0.3",
    "vite-plugin-vue2": "^2.0.2",
    "vite-plugin-vue2-svg": "^0.3.0",
    "vue": "~2.6.14",
    "vue-eslint-parser": "^9.1.0",
    "vue-i18n": "^8.9.0",
    "vue-router": "^3.6.4",
    "vue-template-compiler": "~2.6.14"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{js,ts,jsx,tsx,vue}": [
      "prettier --write",
      "eslint --fix"
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "browserslist": [
    "> 1%",
    "last 2 versions"
  ],
  "engines": {
    "node": ">=10.0.0"
  },
  "resolutions": {
    "vue": "~2.6.14",
    "vue-template-compiler": "~2.6.14"
  }
}
