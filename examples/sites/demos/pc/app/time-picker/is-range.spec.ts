import { test, expect } from '@playwright/test'

test('范围选择', async ({ page }) => {
  page.on('pageerror', (exception) => expect(exception).toBeNull())
  await page.goto('time-picker#is-range')

  const preview = page.locator('#preview')
  const timePicker = preview.locator('.tiny-date-editor')
  const rangePicker = page.locator('.tiny-time-range-picker')
  const getHourSelect = (parent) => parent.locator('.tiny-scrollbar.tiny-transition-timepicker').first()
  const startSelect = rangePicker.locator('.tiny-time-range-picker__cell').first()
  const endSelect = rangePicker.locator('.tiny-time-range-picker__cell').nth(1)
  const startHourSelectItem = getHourSelect(startSelect).locator('.tiny-time-spinner__item')
  const endHourSelectItem = getHourSelect(endSelect).locator('.tiny-time-spinner__item')
  const cancelBtn = rangePicker.getByRole('button', { name: '取消' })
  const confirmBtn = rangePicker.getByRole('button', { name: '确定' })

  await expect(timePicker.locator('input')).toHaveCount(2)
  await expect(timePicker.locator('.tiny-range-separator')).toHaveText('至')
  await timePicker.locator('input').first().click()
  await expect(rangePicker).toBeVisible()
  await cancelBtn.click()
  await expect(rangePicker).not.toBeVisible()
  await timePicker.locator('input').nth(1).click()
  await expect(rangePicker).toBeVisible()
  await cancelBtn.click()
  await expect(rangePicker).not.toBeVisible()
  await timePicker.locator('input').first().click()
  await getHourSelect(endSelect).getByText('19').click()

  await expect(startHourSelectItem.filter({ hasText: '19' })).not.toHaveClass(/disabled/)
  await expect(startHourSelectItem.filter({ hasText: '20' })).toHaveClass(/disabled/)
  await getHourSelect(startSelect).getByText('19').click()
  await expect(endHourSelectItem.filter({ hasText: '19' })).not.toHaveClass(/disabled/)
  await expect(endHourSelectItem.filter({ hasText: '18' })).toHaveClass(/disabled/)
  await confirmBtn.click()
  await expect(timePicker.locator('input').first()).toHaveValue('19:40:00')
  await expect(timePicker.locator('input').nth(1)).toHaveValue('19:50:00')
})
