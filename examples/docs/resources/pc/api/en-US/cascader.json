{
  "attrs": [
    {
      "name": "modelValue / v-model",
      "sample": "clearable",
      "type": "",
      "desc": "Bound value of the selected item",
      "defaultValue": ""
    },
    {
      "name": "options",
      "sample": "disabled-items",
      "type": "Array",
      "desc": "Optional data source. The key name can be configured through the Props attribute.",
      "defaultValue": ""
    },
    {
      "name": "props",
      "sample": "props-children",
      "type": "Object",
      "desc": "Configuration options. For details, see the Cascader Props table.",
      "defaultValue": ""
    },
    {
      "name": "popper-class",
      "sample": "",
      "type": "String",
      "desc": "Add a class name for the popper. For details, see the popover component.",
      "defaultValue": ""
    },
    {
      "name": "popper-append-to-body",
      "sample": "",
      "type": "Boolean",
      "desc": "Indicates whether to insert a pop-up box to the body element. If an error occurs in locating a fault in the dialog box that is displayed, set this attribute to false (for details, see the select component).",
      "defaultValue": "true"
    },
    {
      "name": "size",
      "sample": "clearable2",
      "type": "String",
      "desc": "Dimension; The optional values of this attribute are medium / small / mini",
      "defaultValue": ""
    },
    {
      "name": "placeholder",
      "sample": "filterable-multiple1",
      "type": "String",
      "desc": "Placeholder text in the text box",
      "defaultValue": "Please select"
    },
    {
      "name": "disabled",
      "sample": "disabled-items",
      "type": "Boolean",
      "desc": "Disable",
      "defaultValue": "false"
    },
    {
      "name": "clearable",
      "sample": "clearable",
      "type": "Boolean",
      "desc": "Whether to support the clear option",
      "defaultValue": "false"
    },
    {
      "name": "show-all-levels",
      "sample": "show-all-levels",
      "type": "Boolean",
      "desc": "Whether to display the full path of the selected value in the text box",
      "defaultValue": "true"
    },
    {
      "name": "collapse-tags",
      "sample": "collapse-tags",
      "type": "Boolean",
      "desc": "Whether to collapse tags in multi-choice mode",
      "defaultValue": "false"
    },
    {
      "name": "separator",
      "sample": "clearable1",
      "type": "String",
      "desc": "Option separator",
      "defaultValue": "/"
    },
    {
      "name": "filterable",
      "sample": "filterable",
      "type": "Boolean",
      "desc": "Whether to search for options",
      "defaultValue": ""
    },
    {
      "name": "filter-method",
      "sample": "filter-method",
      "type": "Function(node, keyword)",
      "desc": "Customize the search logic. The first parameter is node, and the second parameter is keyword. A Boolean value is returned to indicate whether the search is hit.",
      "defaultValue": ""
    },
    {
      "name": "debounce",
      "sample": "filterable",
      "type": "Number",
      "desc": "Dejitter delay of the search keyword, in milliseconds.",
      "defaultValue": "300"
    },
    {
      "name": "before-filter",
      "sample": "filter-method",
      "type": "Function(value)",
      "desc": "Hook before filtering. The parameter is the input value. If false is returned or Promise is returned and rejected, the filtering stops.",
      "defaultValue": ""
    },
    {
      "name": "popper-class",
      "sample": "",
      "type": "String",
      "desc": "Customized floating layer class name",
      "defaultValue": ""
    }
  ],
  "slots": [
    {
      "name": "empty",
      "sample": "filterable",
      "type": "",
      "desc": "Content when no matching option is found",
      "defaultValue": ""
    }
  ],
  "methods": [
    {
      "name": "getCheckedNodes",
      "sample": "events",
      "type": "",
      "desc": "Obtain the selected node. The parameter (leafOnly) indicates whether to obtain only subnodes.  The default value is false",
      "defaultValue": ""
    }
  ],
  "events": [
    {
      "name": "change",
      "sample": "events",
      "type": "Fuction(arg)",
      "desc": "This event is triggered when the selected node changes. arg: The callback parameter is the value of the selected node (array type).",
      "defaultValue": ""
    },
    {
      "name": "expand-change",
      "sample": "events",
      "type": "Fuction(arg)",
      "desc": "This event is triggered when the expanded node changes. arg: The callback parameter is an array (Array type) consisting of parent option values.",
      "defaultValue": ""
    },
    {
      "name": "blur",
      "sample": "events",
      "type": "Fuction(arg)",
      "desc": "This event is triggered when the focus is lost. arg: The callback parameter is (event: Event, type: Object).",
      "defaultValue": ""
    },
    {
      "name": "focus",
      "sample": "events",
      "type": "Fuction(arg)",
      "desc": "This event is triggered when the focus is obtained. arg: The callback parameter is (event: Event, type: Object).",
      "defaultValue": ""
    },
    {
      "name": "visible-change",
      "sample": "events",
      "type": "Fuction(arg)",
      "desc": "This event is triggered when the drop-down list box is displayed or hidden. arg: true if the callback parameter is present; false if the callback parameter is hidden (Boolean)",
      "defaultValue": ""
    },
    {
      "name": "remove-tag",
      "sample": "default-multiple",
      "type": "Fuction(arg)",
      "desc": "In multi-choice mode, this event is triggered when a tag is removed. arg: The callback parameter is the value of the node corresponding to the removed tag (array type).",
      "defaultValue": ""
    }
  ],
  "casprops": [
    {
      "name": "expandTrigger",
      "sample": "basic-usage",
      "type": "String",
      "desc": "The expansion mode of the secondary menu; The optional values of this attribute are click / hover",
      "defaultValue": "click"
    },
    {
      "name": "multiple",
      "sample": "default-multiple",
      "type": "Boolean",
      "desc": "Whether to select multiple options",
      "defaultValue": "false"
    },
    {
      "name": "checkStrictly",
      "sample": "check-strictly",
      "type": "Boolean",
      "desc": "Whether to strictly comply with the principle that parent and child nodes are not associated with each other",
      "defaultValue": "false"
    },
    {
      "name": "emitPath",
      "sample": "events",
      "type": "Boolean",
      "desc": "Indicates whether to return an array consisting of the values of menus at different levels of the selected node when the selected node is changed. If this parameter is set to false, only the value of the selected node is returned.",
      "defaultValue": "true"
    },
    {
      "name": "lazy",
      "sample": "auto-load",
      "type": "Boolean",
      "desc": "Whether to dynamically load subnodes. This parameter must be used together with the lazyLoad method.",
      "defaultValue": "false"
    },
    {
      "name": "lazyLoad",
      "sample": "auto-load",
      "type": "Function(node, resolve)",
      "desc": "Method for loading dynamic data. This parameter is valid only when lazy is set to true. Parameter description: node indicates the currently clicked node. resolve indicates the callback after data loading is complete (mandatory).",
      "defaultValue": ""
    },
    {
      "name": "value",
      "sample": "props-children",
      "type": "String",
      "desc": "The value of an option is the value of an attribute of the option object.",
      "defaultValue": "'value'"
    },
    {
      "name": "label",
      "sample": "props-children",
      "type": "String",
      "desc": "Specify that the option label is an attribute value of the option object.",
      "defaultValue": "'label'"
    },
    {
      "name": "children",
      "sample": "props-children",
      "type": "String",
      "desc": "Specifies that the sub-option of an option is an attribute value of the option object.",
      "defaultValue": "'children'"
    },
    {
      "name": "disabled",
      "sample": "disabled-items",
      "type": "String",
      "desc": "Specify that an option is disabled as an attribute value of the option object.",
      "defaultValue": "'disabled'"
    },
    {
      "name": "leaf",
      "sample": "check-strictly",
      "type": "String",
      "desc": "The flag bit of the leaf node of the specified option is an attribute value of the option object.",
      "defaultValue": "'leaf'"
    }
  ]
}
