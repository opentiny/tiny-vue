{
  "attrs": [
    {
      "name": "disabled",
      "sample": "",
      "type": "Boolean",
      "desc": "Disable",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "suffix-icon",
      "sample": "prefix-icon",
      "type": "String",
      "desc": "The html icon is placed behind the input text box.; Input box end icon",
      "defaultValue": ""
    },
    {
      "name": "maxlength",
      "sample": "maxlength",
      "type": "Number",
      "desc": "Set the maxLength attribute of the input box and the maximum input length.; Native attribute, maximum input length",
      "defaultValue": ""
    },
    {
      "name": "prefix-icon",
      "sample": "prefix-icon",
      "type": "String",
      "desc": "html icon in the front of the input text box. ;Icon at the head of the input box",
      "defaultValue": ""
    },
    {
      "name": "readonly",
      "sample": "",
      "type": "Boolean",
      "desc": "Sets the read-only attribute of the text. The default value is false. ;Native attribute, read-only",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "clearable",
      "sample": "clearable",
      "type": "Boolean",
      "desc": "Whether to display the clear button. This attribute is not applicable to type=\"textarea\". Cleared",
      "defaultValue": ""
    },
    {
      "name": "type",
      "sample": "show-password",
      "type": "String",
      "desc": "Set the type attribute of the input box. The default value is text. The options are password and text.; The optional values of this attribute are text, textarea, and type values of other native inputs",
      "defaultValue": "The default value of this attribute is text"
    },
    {
      "name": "modelValue / v-model",
      "sample": "clearable",
      "type": "String , Number",
      "desc": "Sets the default value of text display. ;Bound value",
      "defaultValue": ""
    },
    {
      "name": "show-word-limit",
      "sample": "show-word-limit",
      "type": "Boolean",
      "desc": "Whether to display the number of input words. This parameter is valid only when type is \"text\" or type is \"textarea\"",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "placeholder",
      "sample": "event-blur",
      "type": "String",
      "desc": "Enter the place-holder text in the text box",
      "defaultValue": ""
    },
    {
      "name": "show-password",
      "sample": "show-password",
      "type": "Boolean",
      "desc": "Whether to display the switchover password icon",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "size",
      "sample": "size",
      "type": "String",
      "desc": "Size of the text box. This parameter is valid only when type!=\"textarea\". The options of this attribute are medium, small, and mini",
      "defaultValue": ""
    },
    {
      "name": "cols",
      "sample": "rows",
      "type": "String",
      "desc": "Native attribute, which is used to set the width. This parameter is valid only when type is \"textarea\"",
      "defaultValue": ""
    },
    {
      "name": "rows",
      "sample": "rows",
      "type": "Number",
      "desc": "Number of lines in the input box. This parameter is valid only for type=\"textarea\"",
      "defaultValue": "The default value of this property is 2"
    },
    {
      "name": "autosize",
      "sample": "autosize",
      "type": "Boolean , Object",
      "desc": "Adaptive content height. This parameter is valid only for type=\"textarea\". Objects can be transferred, for example, {minRows: 2, maxRows: 6}",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "autocomplete",
      "sample": "autocomplete",
      "type": "String",
      "desc": "The original attribute is automatically supplemented. The options of this attribute are on and off",
      "defaultValue": "The default value of this attribute is off"
    },
    {
      "name": "name",
      "sample": "name",
      "type": "String",
      "desc": "Native attribute",
      "defaultValue": ""
    },
    {
      "name": "max",
      "sample": "max",
      "type": "Number",
      "desc": "Native attribute, set the maximum value.",
      "defaultValue": ""
    },
    {
      "name": "min",
      "sample": "min",
      "type": "Number",
      "desc": "Native attribute, which sets the minimum value.",
      "defaultValue": ""
    },
    {
      "name": "step",
      "sample": "step",
      "type": "Number",
      "desc": "Native attribute, which is used to set the valid digit interval of the input field.",
      "defaultValue": ""
    },
    {
      "name": "resize",
      "sample": "resize",
      "type": "String",
      "desc": "Whether the user can zoom in or out. The options of this attribute are none, both, horizontal, and vertical",
      "defaultValue": ""
    },
    {
      "name": "autofocus",
      "sample": "autofocus",
      "type": "Boolean",
      "desc": "Native attribute, which automatically obtains the focus.",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "form",
      "sample": "form",
      "type": "String",
      "desc": "Native attribute",
      "defaultValue": ""
    },
    {
      "name": "label",
      "sample": "label",
      "type": "String",
      "desc": "label text associated with the text box",
      "defaultValue": ""
    },
    {
      "name": "tabindex",
      "sample": "tabindex",
      "type": "String",
      "desc": "tabindex in the text box",
      "defaultValue": ""
    },
    {
      "name": "validate-event",
      "sample": "validate-event",
      "type": "Boolean",
      "desc": "Trigger form verification upon input",
      "defaultValue": "The default value of this property is true"
    },
    {
      "name": "counter",
      "sample": "counter",
      "type": "Boolean",
      "desc": "Whether to display the word count statistics. This parameter is valid only when type is \"text\" or type is \"textarea\"",
      "defaultValue": "The default value of this attribute is false."
    }
  ],
  "slots": [
    {
      "name": "prefix",
      "sample": "slot-prepend",
      "type": "",
      "desc": "Content in the header of the text box, which is valid only for type=\"text\"",
      "defaultValue": ""
    },
    {
      "name": "suffix",
      "sample": "slot-suffix",
      "type": "",
      "desc": "The content at the end of the text box is valid only for type=\"text\"",
      "defaultValue": ""
    },
    {
      "name": "prepend",
      "sample": "slot-prepend",
      "type": "",
      "desc": "Content before the text box, which is valid only for type=\"text\"",
      "defaultValue": ""
    },
    {
      "name": "append",
      "sample": "slot-append",
      "type": "",
      "desc": "Content at the end of the text box. This field is valid only for type=\"text\"",
      "defaultValue": ""
    }
  ],
  "methods": [
    {
      "name": "focus",
      "sample": "method-focus",
      "type": "",
      "desc": "To enable the input to obtain the focus",
      "defaultValue": ""
    },
    {
      "name": "blur",
      "sample": "method-blur",
      "type": "",
      "desc": "The input loses focus.",
      "defaultValue": ""
    },
    {
      "name": "select",
      "sample": "method-select",
      "type": "",
      "desc": "Select the text in input.",
      "defaultValue": ""
    },
    {
      "name": "addMemory",
      "sample": "method-addMemory",
      "type": "",
      "desc": "Memorization method of historical input content",
      "defaultValue": ""
    }
  ],
  "events": [
    {
      "name": "input",
      "sample": "event-input",
      "type": "Function(arg1)",
      "desc": "An event is triggered when a value is entered. onInput(arg1){\n// arg1 =  event.target.value Value in the text box \n// do something you want...}",
      "defaultValue": ""
    },
    {
      "name": "blur",
      "sample": "event-blur",
      "type": "Function(arg1)",
      "desc": "Trigger when Input loses focus; onBlur(arg1){\n// arg1 =  event\n// do something you want...}",
      "defaultValue": ""
    },
    {
      "name": "focus",
      "sample": "event-focus",
      "type": "Function(arg1)",
      "desc": "Trigger when Input obtains focus; onFocus(arg1){\n// arg1 =  event} \n// do something you want...}",
      "defaultValue": ""
    },
    {
      "name": "change",
      "sample": "event-change",
      "type": "Function(arg1)",
      "desc": "triggered when the input value changes. onChange(arg1){\n// arg1 =  event.target.value Value after the change}\n// do something you want...}",
      "defaultValue": ""
    },
    {
      "name": "clear",
      "sample": "event-clear",
      "type": "Function",
      "desc": "Trigger when the clear button generated by the clearable property is clicked; onClear () {// do something you want...}",
      "defaultValue": ""
    }
  ]
}
