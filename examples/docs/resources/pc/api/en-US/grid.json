{
  "gridattrs": [
    {
      "name": "pager",
      "sample": "grid-pager#pager-inner-pager",
      "type": "Object",
      "desc": "Set the pagination configuration item. Use the pager attribute {component: Pager} to inject the pagination component and {attrs: {currentPage: 1,pageSize: 5,pageSizes: [5, 10], total: 0,layout:' total, prev, pager, next, jumper, sizes '} to configure pagination.",
      "defaultValue": ""
    },
    {
      "name": "fetch-data",
      "sample": "grid-data-source#tiny-first-menu-request-service",
      "type": "Object",
      "desc": "Querying Server Data",
      "defaultValue": ""
    },
    {
      "name": "save-data",
      "sample": "grid-toolbar#tiny-first-menu-save-data",
      "type": "Object",
      "desc": "Method of saving server data",
      "defaultValue": ""
    },
    {
      "name": "delete-data",
      "sample": "grid-toolbar#tiny-first-menu-save-data",
      "type": "Object",
      "desc": "Method of deleting server data; ({$grid, changeRecords}, ...args)=>{return new Promise((resolve, reject)=>{setTimeout(()=>{resolve()},300)})}",
      "defaultValue": ""
    },
    {
      "name": "row-group",
      "sample": "grid-row-grouping#row-grouping",
      "type": "Object",
      "desc": "The row group attribute can be configured. Columns with the same value are displayed in a row group.",
      "defaultValue": ""
    },
    {
      "name": "toolbar",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "Object",
      "desc": "Toolbar configuration",
      "defaultValue": ""
    },
    {
      "name": "align",
      "sample": "grid-align#align-grid-align-left-grid-align",
      "type": "String",
      "desc": "All column alignment mode; The optional values of this attribute are left (left-aligned), center (center-aligned), and right (right-aligned)",
      "defaultValue": "The default value of this attribute is left"
    },
    {
      "name": "auto-resize",
      "sample": "grid-width-height#tiny-first-menu-adaptive-grid-width-height",
      "type": "Boolean",
      "desc": "Parent element responsive listening (This may be used in scenarios where the parent element may have dynamic changes.)",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "border",
      "sample": "grid-grid-border#tiny-first-menu-grid-border",
      "type": "Boolean",
      "desc": "Whether there is a vertical border",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "is-before-page-change",
      "sample": "grid-event#event-page-change-event",
      "type": "Boolean",
      "desc": "Whether to enable the preprocessing feature when the page changes. If the value is true, the page turning operation or page size change operation does not take effect immediately. The service logic is left for the user to process. Then, the reserved callback or rollback is invoked to make the operation take effect or invalid. For details, see the before-page-change event",
      "defaultValue": ""
    },
    {
      "name": "cell-class-name",
      "sample": "grid-custom-style#custom-style-cell-style",
      "type": "String, Function",
      "desc": "Add a class name to a cell. The class name can also be the Function({seq, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "column-key",
      "sample": "grid-operation-column#tiny-first-menu-column-key",
      "type": "Boolean",
      "desc": "Whether to set the key attribute for VNodes in each column (not required in special cases).",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "column-min-width",
      "sample": "grid-width-height#tiny-first-menu-column-min-width",
      "type": "Number , String",
      "desc": "Minimum width that can be adjusted. If this parameter is not set, the default value is the width of the column head span plus 36 (fixed width of the head).; all minimum column widths; The remaining space will be allocated in proportion automatically. The optional values of this attribute are integers, px,%",
      "defaultValue": ""
    },
    {
      "name": "column-width",
      "sample": "grid-width-height#tiny-first-menu-column-width",
      "type": "Number, String",
      "desc": "Width of all columns; The optional values of this attribute are integers, px,%",
      "defaultValue": "The default value of this attribute is equal allocation by default."
    },
    {
      "name": "context-menu",
      "sample": "grid-context-menu#grid_Example-shortcutMenu-footer-menu",
      "type": "Object",
      "desc": "Shortcut menu configuration item",
      "defaultValue": ""
    },
    {
      "name": "edit-rules",
      "sample": "grid-validation#grid_Example-gridValid-editing-validation",
      "type": "Object",
      "desc": "Check rule configuration item",
      "defaultValue": ""
    },
    {
      "name": "expand-config",
      "sample": "grid-tree-grid#tree-table-tree-grid-expand-config",
      "type": "Object",
      "desc": "Define the row configuration item. {expandAll: false, // Indicates whether to expand all rows by default. \n trigger:'row', // Indicates the triggering mode of expanding rows. The options include cell (triggered by clicking the cell where the icon is located) and row (triggered by clicking the row). By default, click the icon to trigger \n expandRowKeys: [], // Expand the specified row by default. (The row-id is required. \n accordion: false //Whether only one node can be expanded at a time. \n activeMethod: Function () {} // Customized expansion rule}",
      "defaultValue": ""
    },
    {
      "name": "fit",
      "sample": "grid-width-height#tiny-first-menu-adaptive-column-width",
      "type": "Boolean",
      "desc": "Whether the widths of all columns are extended automatically.",
      "defaultValue": "The default value of this property is true"
    },
    {
      "name": "footer-align",
      "sample": "grid-align#align-footer-align-left-footer-align",
      "type": "String",
      "desc": "Alignment mode of all table tail columns; The optional values of this attribute are left (left-aligned), center (center-aligned), and right (right-aligned)",
      "defaultValue": "The default value of this property is inherited align"
    },
    {
      "name": "optimization",
      "sample": "grid-grid-optimization#tiny-first-menu-grid-optimization",
      "type": "Object",
      "desc": "Optimize configuration items",
      "defaultValue": "The default value of this attribute is animat: true,delayHover: 250,scrollX: {gt: 100, . When the value is greater than the value range, virtual scrolling is automatically started. (If X virtual scrolling is enabled, all column widths must be fixed, otherwise they are not compatible) The default value is 100, oSize: 2, re-rendering is triggered when the remaining data is less than the specified range. The default value is rSize: 2, and the number of strips is automatically calculated each time. vSize: 5 Number of strips in the specified visible area}, scrollY: {gt: 500, Specify the range beyond which to automatically start virtual scrolling (Enable Y Virtual Scroll, all rows must be fixed, otherwise it is not compatible) The default value is 500 oSize: 2, when the remaining data is less than the specified range, re-rendering is triggered. The default value is rSize: 2, and the number of bars is automatically calculated each time. vSize: 5, the number of bars in the specified visible area is automatically calculated by default. rHeight: 50, the height of a specified row is automatically calculated by default. true: automatically adapts to the optimal rendering mode. The default value is true}"
    },
    {
      "name": "params",
      "sample": "grid-filter#grid-params",
      "type": "Object",
      "desc": "Additional parameters",
      "defaultValue": ""
    },
    {
      "name": "footer-cell-class-name",
      "sample": "grid-custom-style#custom-style-footer-style-footer-cell-style",
      "type": "String, Function",
      "desc": "Add the class name to the cell at the end of the table. The class name can also be the function Function({$rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "footer-method",
      "sample": "grid-summary#summary-custom-summary",
      "type": "Function",
      "desc": "Calculation method of table tail total Function({columns, data});params:{columns: all column configuration data: all table data}",
      "defaultValue": ""
    },
    {
      "name": "footer-row-class-name",
      "sample": "grid-custom-style#custom-style-footer-style-footer-cell-style",
      "type": "String, Function",
      "desc": "Add className to the row at the end of the table. The className can also be the function Function({$rowIndex}). Use footer-cell-class-name and footer-row-class-name to set the cell and row styles at the end of the table params:{$rowIndex: row label}",
      "defaultValue": ""
    },
    {
      "name": "footer-span-method",
      "sample": "grid-footer#footer-footer-row-or-column-span",
      "type": "Function",
      "desc": "Merge rows or columns at the end of the table. This function Function({$rowIndex, column, columnIndex, $columnIndex, data}) returns the calculated value. The show-footer must be configured when the table tail total row or column logic is set by footer-method and footer-span-method. parmas: {$rowIndex: row label column: column data columnIndex: column subscript data: an array that holds the currently combined and calculated data}",
      "defaultValue": ""
    },
    {
      "name": "header-align",
      "sample": "grid-align#align-header-align-left-header-align",
      "type": "String",
      "desc": "Alignment mode of all table header columns; The optional values of this attribute are left (left-aligned), center (center-aligned), and right (right-aligned)",
      "defaultValue": "The default value of this property is inheritance alignment"
    },
    {
      "name": "header-cell-class-name",
      "sample": "grid-custom-style#custom-style-header-style-header-cell-style",
      "type": "String, Function",
      "desc": "Add a class name to the cell in the table header. The class name can also be the function Function({$rowIndex, column, columnIndex, $columnIndex}). params{$rowIndex: row label, column: column data, columnIndex: column subscript, $columnIndex: column subscript}",
      "defaultValue": ""
    },
    {
      "name": "header-row-class-name",
      "sample": "grid-custom-style#custom-style-header-style-header-cell-style",
      "type": "String, Function",
      "desc": "Add className to the row in the table header. It can also be the function Function({$rowIndex});params: {$rowIndex: row label}",
      "defaultValue": ""
    },
    {
      "name": "height",
      "sample": "grid-width-height#tiny-first-menu-fixed-grid-height",
      "type": "Number , String",
      "desc": "Set the height of the table content area (excluding the table header and bottom). If this parameter is not set, the height of the table content area is adaptive.; height of table; Supports full parent containers or fixed width and height. The optional values of this attribute are integers, px,%",
      "defaultValue": ""
    },
    {
      "name": "highlight-cell",
      "sample": "grid-highlight#highlight-highlight-cell",
      "type": "Boolean",
      "desc": "This parameter is valid only when editConfig is configured. Whether to highlight the cell border during edit.",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "highlight-current-column",
      "sample": "grid-highlight#highlight-highlight-current-column",
      "type": "Boolean",
      "desc": "Do you want to highlight the current column?",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "highlight-current-row",
      "sample": "grid-highlight#highlight-highlight-current-row",
      "type": "Boolean",
      "desc": "Do you want to highlight the current line?",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "highlight-hover-column",
      "sample": "grid-highlight#highlight-highlight-hover-column",
      "type": "Boolean",
      "desc": "Do you want to highlight the column when you move the cursor to the column?",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "highlight-hover-row",
      "sample": "grid-highlight#highlight-highlight-hover-row",
      "type": "Boolean",
      "desc": "Do you want to highlight the line when you move the cursor to the line?",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "keyboard-config",
      "sample": "grid-keyboard#keyboard-navigation",
      "type": "Object",
      "desc": "Key configuration item; {isArrow: true //Enable the arrow keys}",
      "defaultValue": ""
    },
    {
      "name": "loading",
      "sample": "grid-grid-loading-tip#tiny-first-menu-grid-loading-off-tip",
      "type": "Boolean",
      "desc": "Whether the table is being loaded.",
      "defaultValue": "The default value of this property is true"
    },
    {
      "name": "max-height",
      "sample": "grid-width-height#tiny-first-menu-min-grid-height",
      "type": "Number , String",
      "desc": "Set the maximum height of the table content area (excluding the table header and bottom).; The optional values of this attribute are integers, px,%",
      "defaultValue": ""
    },
    {
      "name": "mouse-config",
      "sample": "grid-keyboard#mouse-config",
      "type": "Object",
      "desc": "Mouse configuration item; {selected: true //Whether to enable the function of selecting cells by left-clicking. This function is valid only for edit-config.mode=cell. The default value is false.}",
      "defaultValue": ""
    },
    {
      "name": "radio-config",
      "sample": "grid-operation-column#tiny-first-menu-radio-config",
      "type": "Object",
      "desc": "Select a configuration item. {trigger:'cell', //Trigger selection mode. The options include cell (triggered by clicking the cell where the icon is located)/row (triggered by clicking the row). By default, the icon is triggered.\n labelField:'', //Field name displayed in the single-choice box. You can directly display it in the check box.\n checkRowKey:', //The specified line is selected by default. (This function is triggered only once during initialization. The row-id parameter is required.) \n checkMethod: Function() {} //Whether to allow the selected method. The return value of this method determines whether the Radio in the row can be selected",
      "defaultValue": ""
    },
    {
      "name": "remote-filter",
      "sample": "grid-filter#filter-server-filter",
      "type": "Boolean",
      "desc": "Whether to use server filtering for all columns. If this parameter is set to true, data will not be processed.",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "remote-sort",
      "sample": "grid-sort#sort-server-sort",
      "type": "Boolean",
      "desc": "Whether to sort all data on the server. The default value is false. The server-side sorting is not performed.",
      "defaultValue": "The default value of this attribute is false"
    },
    {
      "name": "resizable",
      "sample": "grid-width-height#tiny-first-menu-resize-column-width",
      "type": "Boolean",
      "desc": "Set whether to allow column width adjustment",
      "defaultValue": "The default value of this property is true"
    },
    {
      "name": "row-class-name",
      "sample": "grid-custom-style#custom-style-row-style",
      "type": "String, Function",
      "desc": "User-defined table row class name, which is used in the scenario where the row style of the table is customized. You can set the string class name directly or use the Function({seq, row, rowIndex, $rowIndex}) function to return the class name.",
      "defaultValue": ""
    },
    {
      "name": "row-id",
      "sample": "grid-sort#tiny-first-menu-row-id",
      "type": "String",
      "desc": "Field name of the unique primary key of the customized row data (The row data must have a unique primary key, which is automatically generated by default)",
      "defaultValue": "The default value of this property is _RID"
    },
    {
      "name": "row-key",
      "sample": "",
      "type": "Boolean",
      "desc": "Whether to set the key attribute for the VNode in each row (not necessary in special cases)",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "select-config",
      "sample": "grid-operation-column#disable-selection",
      "type": "Object",
      "desc": "Check the configuration item. {trigger:'cell', //Trigger selection mode. The options include cell (triggered by clicking the cell where the icon is located) and row (triggered by clicking the row). By default, the icon is triggered.\n labelField:'', //Field name displayed in the check box. It can be directly displayed in the check box.\n checkRowKeys: [], //The specified line is selected by default. (This function is triggered only once during initialization. The row-id parameter is required.) \n checkMethod: Function() {}, // Indicates whether the selected method is allowed. The return value of this method is used to determine whether the checkbox of this line can be selected.\n checkAll: true, true //All are selected by default (triggered only once during initialization)}\n showHeader: true, // Indicates whether to display all buttons. If checkStrictly=true, the default value is false. \n checkStrictly: false, //Whether to strictly follow the method of not associating parent and child with each other.\n reserve: false //Whether to retain the historical selection data for the page turning operation}",
      "defaultValue": ""
    },
    {
      "name": "show-footer",
      "sample": "grid-summary#summary-cus tom-summary",
      "type": "Boolean",
      "desc": "Display the total at the end of the table",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "show-header",
      "sample": "grid-header#header-hide-grid-header",
      "type": "Boolean",
      "desc": "Whether to display the table header",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "show-header-overflow",
      "sample": "grid-tip#tip-column-header-tip",
      "type": "Boolean, String",
      "desc": "Sets the display of all contents in the table header as ellipsis if the length is too long. The optional values for this property are ellipsis (only the ellipsis is displayed), title (and the native title is displayed), and tooltip (and tooltip is displayed)",
      "defaultValue": ""
    },
    {
      "name": "show-overflow",
      "sample": "grid-tip#tip-cell-tip",
      "type": "Boolean, String",
      "desc": "Set the display of all content as ellipsis when the content is too long. (If the column is fixed, you are advised to set this parameter to improve the rendering speed.) The optional values for this property are ellipsis (only the ellipsis is displayed), title (and the native title is displayed), tooltip (and the tooltip prompt is displayed)",
      "defaultValue": ""
    },
    {
      "name": "size",
      "sample": "grid-grid-size#tiny-first-menu-grid-size",
      "type": "String",
      "desc": "Table size; The options of this attribute are medium, small, and mini",
      "defaultValue": ""
    },
    {
      "name": "sort-config",
      "sample": "grid-sort#sort-default-sort",
      "type": "Object",
      "desc": "Sort configuration items; {trigger:'cell'//Sorting triggering mode. You can set this parameter to cell (click the head cell to trigger sorting). If this parameter is not set, the up and down arrows are clicked to trigger sorting by default.} ",
      "defaultValue": ""
    },
    {
      "name": "sort-method",
      "sample": "grid-sort#sort-custom-sort",
      "type": "Function(arg1, arg2)",
      "desc": "Customize the sorting method of all columns. When sorting is triggered, the function Function(arg1, arg2) is invoked to return the sorting result. User-defined sorting method, similar to the native sort sorting method. The input parameter arguments: (arg1, arg2) arg1: is the previous comparison data item arg2: the next comparison data item",
      "defaultValue": ""
    },
    {
      "name": "span-method",
      "sample": "grid-span#span-row-span-row-span",
      "type": "Function",
      "desc": "Consolidate rows or columns. This function Function({seq, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, data}) returns the calculated value.",
      "defaultValue": "The default value of this property is {rowspan: 1, colspan: 1}"
    },
    {
      "name": "start-index",
      "sample": "grid-serial-column#tiny-first-menu-start-index",
      "type": "Number",
      "desc": "This parameter is valid only for columns whose type is index. The value of this parameter is the start value of the dynamic index.",
      "defaultValue": "The default value of this attribute is 0"
    },
    {
      "name": "stripe",
      "sample": "grid-grid-stripe#stripe-stripe",
      "type": "Boolean",
      "desc": "Zebra pattern",
      "defaultValue": "The default value of this property is false."
    },
    {
      "name": "sync-resize",
      "sample": "grid-width-height#tiny-first-menu-adaptive-grid-width-height",
      "type": "Boolean",
      "desc": "Responsively follow an attribute. (This may be used in scenarios where the display/hide switchover is controlled by an attribute)",
      "defaultValue": "The default value of this attribute is false"
    },
    {
      "name": "tree-config",
      "sample": "grid-tree-grid#tree-table-tree-grid-base",
      "type": "Object",
      "desc": "tree structure configuration item, tree-config:{children:'children'} children: identification character used to define the lower level and subset of data in the tree structure data;{trigger:'default', //Expanding sub-triggering mode: 'default' (click the button to trigger); 'cell' (click cell to trigger); 'row' (triggered by clicking a row)\nordered: true, // Indicates whether to display the child index in ascending order by number. The options are true. (The child index is displayed in ascending order by number, parent level 1 and child level 2); false (The child index is added based on the parent index. The parent index is 1 and the child index is 1.1.) \nindent: 16, // Controls the horizontal indentation distance. The default value is 16. The unit is px\nchildren: 'children', // Specify the field name of child data\nexpandAll: false, // Indicates whether to expand all rows. \nexpandRowKeys: [], // By default, the specified row in the given array is expanded. The row-id is required. The row-id can be obtained from the '_RID' attribute of the row\naccordion: false, // Whether only one subnode can be expanded at the same time for multiple subnodes at the same level} ",
      "defaultValue": ""
    },
    {
      "name": "valid-config",
      "sample": "grid-validation#grid_Example-gridValid-valid-config",
      "type": "Object",
      "desc": "Check configuration items. {message:'inline'//Check prompt type. 'inline' (built-in prompt) 'tooltip'}",
      "defaultValue": ""
    },
    {
      "name": "summary-config",
      "sample": "grid-summary#summary-configuration-summary",
      "type": "Object",
      "desc": "Configuration item of the table statistics function; {fields:['Emp employees'], //Statistics field name\n fraction: 2, //Final digits reserved after decimal point\n truncate: false, //Whether to truncate. The default value is rounding up. The value is not truncated. \n text: ''//Statistics displayed text}",
      "defaultValue": ""
    },
    {
      "name": "sortable",
      "sample": "grid-customized#custom-column-sort",
      "type": "Boolean",
      "desc": "Whether to allow column data sorting. The default value is true, which can be sorted.",
      "defaultValue": "The default value of this attribute is true"
    },
    {
      "name": "auto-load",
      "sample": "grid-data-source#tiny-first-menu-auto-load",
      "type": "Boolean",
      "desc": "",
      "defaultValue": "Whether to enable the automatic request service. This parameter is valid only when fetch-data is configured. The default value of this parameter is true."
    },
    {
      "name": "is-async-column",
      "sample": "grid-data-source#tiny-first-menu-column-asyn-rendering",
      "type": "Boolean",
      "desc": "Sets whether to delay the loading of columns in the table. Indicates whether to enable the asynchronous column function. This parameter is used together with scrollLoad",
      "defaultValue": ""
    },
    {
      "name": "columns",
      "sample": "grid-data-source#tiny-first-menu-columns",
      "type": "Array",
      "desc": "Configuration information of the table column. For details, see the column configuration items.",
      "defaultValue": ""
    },
    {
      "name": "scroll-load",
      "sample": "grid-large-data#tiny-first-menu-scroll-paging",
      "type": "Object",
      "desc": "Rolling configuration loading; scrollLoad={isInfinity: false //Continuous, \npageSize: 10 //Number of records to be loaded each time}; Sets whether to load pages in scrolling mode. This parameter is valid only when showPager is set to true.",
      "defaultValue": ""
    },
    {
      "name": "row-span",
      "sample": "grid-span#span-row-span-row-span-easy",
      "type": "Array",
      "desc": "Set row combination. This attribute applies only to common tables and cannot be used together with tree-config.",
      "defaultValue": ""
    },
    {
      "name": "render-empty",
      "sample": "grid-empty-data-tip#tiny-first-menu-empty-data-tip",
      "type": "Function",
      "desc": "Render empty data",
      "defaultValue": ""
    },
    {
      "name": "events",
      "sample": "grid-event#event-grid-events",
      "type": "Object",
      "desc": "Event Object",
      "defaultValue": ""
    },
    {
      "name": "data",
      "sample": "grid-data-source#tiny-first-menu-static-data",
      "type": "Array",
      "desc": "Set table data.",
      "defaultValue": ""
    },
    {
      "name": "min-height",
      "sample": "grid-width-height#tiny-first-menu-min-grid-height",
      "type": "Number , String",
      "desc": "Set the minimum height of the table content area (excluding the table header and bottom).",
      "defaultValue": ""
    },
    {
      "name": "drop-config",
      "sample": "grid-drag#drag-row-drag",
      "type": "Object",
      "desc": "Drag configuration items in a table. {plugin: Sortable, // Sortablejs plug-in\n row: true, // Enable row dragging\n column: true, // Enable column dragging \n onBeforeMove: Function() {return false}, // function before dragging, return false and cancel dragging\n filter: '.row__drag-disable', //Whether the row can be dragged according to the class name.\n refresh: true //If the tree level is changed, you can specify whether to refresh the data}",
      "defaultValue": ""
    },
    {
      "name": "edit-config",
      "sample": "grid-editor#grid_Example-gridEdit-inner-editor",
      "type": "Object , Boolean",
      "desc": "Configuration item for editing the table. When Object is configured, the following fields can be configured: {trigger:'click', //Activation triggering mode. The options include click, dblclick, manual\n mode:'cell', //Activation type. The options include cell / row\n showStatus: true, // Display Status\n activeMethod: Function () {} //User-defined editing rule}",
      "defaultValue": ""
    },
    {
      "name": "seq-serial",
      "sample": "grid-pager#pager-inner-pager",
      "type": "Boolean",
      "desc": "Whether to set the row sequence number consecutive. This parameter is valid only when showSeq is set to true.",
      "defaultValue": "Sets whether the row sequence number is continuous. This parameter is valid when paging is enabled. The default value of this parameter is false."
    },
    {
      "name": "show-save-msg",
      "sample": "grid-pager#pager-showSaveMsg",
      "type": "Boolean",
      "desc": "Whether to display a prompt when there is unsaved data during page switching.",
      "defaultValue": ""
    },
    {
      "name": "tooltip-config",
      "sample": "grid-tip#tip-cell-tip",
      "type": "Object",
      "desc": "Configuration item of the built-in tooltip of the Grid. For details, see the Tooltip Attribute Description.",
      "defaultValue": ""
    }
  ],
  "gridslots": [
    {
      "name": "default",
      "sample": "grid-slot#slot-default-slot",
      "type": "",
      "desc": "Default slot (Table column <grid-column>)",
      "defaultValue": ""
    },
    {
      "name": "toolbar",
      "sample": "grid-slot#slot-buttons-slot",
      "type": "",
      "desc": "Toolbar, (Includes: Zoom, Personalize, Refresh Table, and Custom Buttons) <grid-toolbar>",
      "defaultValue": ""
    },
    {
      "name": "pager",
      "sample": "grid-pager#pager-inner-pager",
      "type": "",
      "desc": "Paging plug-in, <pager>",
      "defaultValue": ""
    },
    {
      "name": "empty",
      "sample": "grid-empty-data-tip#tiny-first-menu-empty-data-tip",
      "type": "",
      "desc": "Text content displayed when the data is empty",
      "defaultValue": ""
    }
  ],
  "gridmethods": [
    {
      "name": "clearActived()",
      "sample": "grid-edit#tiny-first-menu-trigger-mode-for-editing",
      "type": "",
      "desc": "Manually clear cell activation status",
      "defaultValue": ""
    },
    {
      "name": "clearAll()",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Manually clear all conditions in the table and restore the table to the initial state. (This may be used in the scenario of adding, deleting, modifying, and querying, for example, clearing the table cache after data is saved.)",
      "defaultValue": ""
    },
    {
      "name": "clearCurrentColumn()",
      "sample": "grid-highlight#highlight-highlight-current-column",
      "type": "",
      "desc": "This command is used to manually clear the current highlighted status.",
      "defaultValue": ""
    },
    {
      "name": "clearCurrentRow()",
      "sample": "grid-highlight#highlight-highlight-current-row",
      "type": "",
      "desc": "For the current line. Manually clear the highlighted status.",
      "defaultValue": ""
    },
    {
      "name": "clearData(rows, field)",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Manually clear the cell content. If no parameter is transferred, the entire table content is cleared. If a row is transferred, the specified row content is cleared. If a specified field is transferred, the field content is cleared.",
      "defaultValue": ""
    },
    {
      "name": "clearFilter(field)",
      "sample": "grid-filter#filter-default-filter",
      "type": "",
      "desc": "Manually clear the filter criteria (if field is not transferred, all filter criteria are cleared). Data will be restored to the unfiltered state.",
      "defaultValue": ""
    },
    {
      "name": "clearRadioRow()",
      "sample": "grid-operation-column#tiny-first-menu-default-serial-column",
      "type": "",
      "desc": "This is used to select a single row. Manually clear the user selection.",
      "defaultValue": ""
    },
    {
      "name": "clearRowExpand()",
      "sample": "grid-nested-grid#grid_Example-nestedGrid",
      "type": "",
      "desc": "Manually clear the expanded row status. The data will be restored to the unexpanded state.",
      "defaultValue": ""
    },
    {
      "name": "clearScroll()",
      "sample": "grid-width-height#tiny-first-menu-min-grid-height",
      "type": "",
      "desc": "Manually clear scrolling information and restore the original state.",
      "defaultValue": ""
    },
    {
      "name": "clearSelected()",
      "sample": "grid-highlight#highlight-highlight-cell",
      "type": "",
      "desc": "Clear cell selection manually",
      "defaultValue": ""
    },
    {
      "name": "clearSelection()",
      "sample": "grid-operation-column#tiny-first-menu-custom-serial-column",
      "type": "",
      "desc": "For selecting multiple lines. Manually clear the user selection.",
      "defaultValue": ""
    },
    {
      "name": "clearSort()",
      "sample": "grid-sort#sort-default-sort",
      "type": "",
      "desc": "Manually clear the sorting conditions. Data will be restored to the unsorted state.",
      "defaultValue": ""
    },
    {
      "name": "clearTreeExpand()",
      "sample": "grid-tree-grid#tree-table-tree-grid-insert-delete-update",
      "type": "",
      "desc": "Manually clear the expanded state of the tree node. The data will be restored to the un-folded state.",
      "defaultValue": ""
    },
    {
      "name": "closeFilter()",
      "sample": "grid-filter#filter-default-filter",
      "type": "",
      "desc": "Manually close the filter panel (which may be used in some special scenarios)",
      "defaultValue": ""
    },
    {
      "name": "closeMenu()",
      "sample": "grid-context-menu#grid_Example-shortcutMenu-cell-menu",
      "type": "",
      "desc": "Manually close the shortcut menu (which may be used in some special scenarios)",
      "defaultValue": ""
    },
    {
      "name": "createData(records)",
      "sample": "grid-data-source#tiny-first-menu-static-data",
      "type": "",
      "desc": "Create a data object. (For some special scenarios, the field name will be automatically checked. If the field name does not exist, the field name will be automatically defined.)",
      "defaultValue": ""
    },
    {
      "name": "createRow(records)",
      "sample": "grid-data-source#tiny-first-menu-static-data",
      "type": "",
      "desc": "Create a Row|Rows object. (This method may be used when data needs to be manually inserted in some special scenarios.)",
      "defaultValue": ""
    },
    {
      "name": "exportCsv(options)",
      "sample": "grid-import-export#tiny-first-menu-export-excel",
      "type": "",
      "desc": "Exports table data to a .csv file. (All mainstream browsers are supported. Rows or columns cannot be combined.)",
      "defaultValue": ""
    },
    {
      "name": "fullValidate(rows, callback)",
      "sample": "grid-validation#grid_Example-gridValid-before-submit-validation",
      "type": "",
      "desc": "Complete table verification function. The difference between this function and validate is that all rules of full data are verified.",
      "defaultValue": ""
    },
    {
      "name": "getActiveRow()",
      "sample": "grid-edit#tiny-first-menu-trigger-mode-for-editing",
      "type": "",
      "desc": "Obtain activated row data",
      "defaultValue": ""
    },
    {
      "name": "getColumnByField(field)",
      "sample": "grid-data-source#tiny-first-menu-columns",
      "type": "",
      "desc": "Obtain columns based on column field names.",
      "defaultValue": ""
    },
    {
      "name": "getColumnById(colid)",
      "sample": "grid-data-source#tiny-first-menu-columns",
      "type": "",
      "desc": "Obtain a column based on the unique primary key of the column.",
      "defaultValue": ""
    },
    {
      "name": "getColumnIndex(column)",
      "sample": "grid-data-source#tiny-first-menu-columns",
      "type": "",
      "desc": "Obtain the index relative to the column based on the column.",
      "defaultValue": ""
    },
    {
      "name": "getColumnNode(cell)",
      "sample": "grid-data-source#tiny-first-menu-columns",
      "type": "",
      "desc": "Obtain the column information based on the th/td element.",
      "defaultValue": ""
    },
    {
      "name": "getColumns(columnIndex)",
      "sample": "grid-data-source#tiny-first-menu-columns",
      "type": "",
      "desc": "Obtains the visual column of the table or specifies the index to obtain the column.",
      "defaultValue": ""
    },
    {
      "name": "getCurrentRow()",
      "sample": "grid-event#tiny-first-menu-get-row-method",
      "type": "",
      "desc": "This is used for the current row to obtain the data of the current row.",
      "defaultValue": ""
    },
    {
      "name": "getData(rowIndex)",
      "sample": "grid-data-source#tiny-first-menu-columns",
      "type": "",
      "desc": "The behavior of obtaining data is the same as that of data. You can also specify an index to obtain data.",
      "defaultValue": ""
    },
    {
      "name": "getInsertRecords()",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Obtain the new data",
      "defaultValue": ""
    },
    {
      "name": "getRadioRow()",
      "sample": "grid-event#tiny-first-menu-get-row-method",
      "type": "",
      "desc": "This command is used to select a single row to obtain the selected data.",
      "defaultValue": ""
    },
    {
      "name": "getRecordset()",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Obtaining a table data set (Obtain the data of adding, deleting, and changing. It is very convenient for adding, deleting, modifying, and querying tables.)",
      "defaultValue": ""
    },
    {
      "name": "getRemoveRecords()",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Obtain deleted data",
      "defaultValue": ""
    },
    {
      "name": "getRowById(rowid)",
      "sample": "grid-event#tiny-first-menu-get-row-method",
      "type": "",
      "desc": "Obtain a row based on the unique primary key of the row.",
      "defaultValue": ""
    },
    {
      "name": "getRowIndex(row:Object)",
      "sample": "grid-event#tiny-first-menu-get-row-method",
      "type": "",
      "desc": "Obtains indexes relative to data based on rows.",
      "defaultValue": ""
    },
    {
      "name": "getRowNode(tr)",
      "sample": "grid-event#tiny-first-menu-get-row-method",
      "type": "",
      "desc": "Obtain row information based on the tr element.",
      "defaultValue": ""
    },
    {
      "name": "getSelectRecords()",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "This command is used to select multiple lines to obtain the selected data.",
      "defaultValue": ""
    },
    {
      "name": "getTableColumn()",
      "sample": "grid-data-source#tiny-first-menu-static-data",
      "type": "",
      "desc": "Obtains columns in the current table. (full table header column, full table header column after processing condition, table header column in current rendering)",
      "defaultValue": ""
    },
    {
      "name": "getTableData()",
      "sample": "grid-data-source#tiny-first-menu-static-data",
      "type": "",
      "desc": "Obtains data in the current table. (complete table body data, full table body data after processing conditions, table body data in the current rendering, table tail data in the current rendering)",
      "defaultValue": ""
    },
    {
      "name": "getUpdateRecords()",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Obtain modified data",
      "defaultValue": ""
    },
    {
      "name": "handleFetch()",
      "sample": "grid-data-source#tiny-first-menu-request-service",
      "type": "",
      "desc": "Fetch-data of the trigger table",
      "defaultValue": ""
    },
    {
      "name": "hasActiveRow(row)",
      "sample": "grid-edit#tiny-first-menu-trigger-mode-for-editing",
      "type": "",
      "desc": "Check whether the row has been activated and is in the editing state.",
      "defaultValue": ""
    },
    {
      "name": "hasRowChange(row, field)",
      "sample": "grid-edit#tiny-first-menu-row-editing",
      "type": "",
      "desc": "Check whether the row or column data is changed.",
      "defaultValue": ""
    },
    {
      "name": "hasRowExpand(row)",
      "sample": "grid-nested-grid#grid_Example-nestedGrid",
      "type": "",
      "desc": "Check whether the row is expanded.",
      "defaultValue": ""
    },
    {
      "name": "hasTreeExpand(row)",
      "sample": "grid-tree-grid#tree-table-tree-grid-expand",
      "type": "",
      "desc": "Check whether the tree node is expanded.",
      "defaultValue": ""
    },
    {
      "name": "hideColumn(column)",
      "sample": "grid-customized#custom-column-visible-hidden",
      "type": "",
      "desc": "Hide a specified column.",
      "defaultValue": ""
    },
    {
      "name": "insert(records)",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Add data to the table.; Insert data into the table, add one or more rows of data from the first row",
      "defaultValue": ""
    },
    {
      "name": "insertAt(records, row)",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Inserts one or more rows into a table. Second parameter: row specified position (tree tables are not supported), null inserted from the first row, and –1 inserted from the last row",
      "defaultValue": ""
    },
    {
      "name": "loadColumn(columns)",
      "sample": "grid-large-data#large-data-load-column",
      "type": "",
      "desc": "Load column configuration (This function may be used in the scenario where table columns need to be reloaded or partially incremented.)",
      "defaultValue": ""
    },
    {
      "name": "loadData(data)",
      "sample": "grid-large-data#tiny-first-menu-full-data-loading",
      "type": "",
      "desc": "Load data (This parameter may be used in the scenario where table data needs to be reloaded or partially incremented.)",
      "defaultValue": ""
    },
    {
      "name": "recalculate()",
      "sample": "grid-width-height#recalculate",
      "type": "",
      "desc": "Recalculate the table. (This may be used in some special scenarios, such as hidden tables and column width update.)",
      "defaultValue": ""
    },
    {
      "name": "refreshColumn()",
      "sample": "grid-customized#custom-column-visible-hidden",
      "type": "",
      "desc": "Refresh column configuration (This parameter may be used in the scenario of displaying or hiding columns.)",
      "defaultValue": ""
    },
    {
      "name": "refreshData()",
      "sample": "grid-tree-grid#tree-table-tree-grid-insert-delete-update",
      "type": "",
      "desc": "Data data is refreshed synchronously. If this method is used, the component does not record the status of adding, deleting, and modifying, and can only implement the corresponding logic. (This parameter may be used in some special scenarios, for example, when a node element in a deep tree changes.)",
      "defaultValue": ""
    },
    {
      "name": "reloadCustoms(customs)",
      "sample": "grid-customized#custom-server-storage",
      "type": "",
      "desc": "Initialize loading to display or hide columns (which may be used in asynchronous update scenarios).",
      "defaultValue": ""
    },
    {
      "name": "remove(rows)",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Deletes data in a specified row. Multiple data records in a specified row or [row, ...] are deleted. If the value is empty, all data records are deleted.",
      "defaultValue": ""
    },
    {
      "name": "removeSelecteds()",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "",
      "desc": "Delete all selected rows.",
      "defaultValue": ""
    },
    {
      "name": "resetAll()",
      "sample": "grid-customized#custom-column-width",
      "type": "",
      "desc": "Manually reset all operations in the column to the initial state. If the toolbar has been associated, the operations will be updated accordingly.",
      "defaultValue": ""
    },
    {
      "name": "resetCustoms()",
      "sample": "grid-customized#custom-column-width",
      "type": "",
      "desc": "Manually reset the display/hide operations of columns to restore the initial status (if the toolbar has been associated, it will be updated accordingly)",
      "defaultValue": ""
    },
    {
      "name": "resetResizable()",
      "sample": "grid-customized#custom-column-width",
      "type": "",
      "desc": "Manually reset the column width and drag the column width to the initial state (if the toolbar has been associated, the column width will be updated accordingly).",
      "defaultValue": ""
    },
    {
      "name": "revertData(rows, field)",
      "sample": "grid-edit#tiny-first-menu-row-editing",
      "type": "",
      "desc": "Restore the data of a specified row or the entire table.",
      "defaultValue": ""
    },
    {
      "name": "scrollTo(scrollLeft, scrollTop)",
      "sample": "grid-large-data#large-data-scroll-to",
      "type": "",
      "desc": "If there is a scroll bar, scroll to the corresponding position.",
      "defaultValue": ""
    },
    {
      "name": "scrollToColumn(column)",
      "sample": "grid-large-data#large-data-scroll-to",
      "type": "",
      "desc": "If there is a scroll bar, scroll to the corresponding column.",
      "defaultValue": ""
    },
    {
      "name": "scrollToRow(row)",
      "sample": "grid-large-data#large-data-scroll-to",
      "type": "",
      "desc": "If there is a scroll bar, scroll to the corresponding line.",
      "defaultValue": ""
    },
    {
      "name": "setActiveCell(row, field)",
      "sample": "grid-edit#tiny-first-menu-cell-editing",
      "type": "",
      "desc": "Activate cell editing",
      "defaultValue": ""
    },
    {
      "name": "setActiveRow(row)",
      "sample": "grid-edit#tiny-first-menu-cell-editing",
      "type": "",
      "desc": "Activate line editing. If mode=cell is selected, the first cell is activated by default.",
      "defaultValue": ""
    },
    {
      "name": "setAllRowExpansion(checked)",
      "sample": "grid-nested-grid#grid_Example-nestedGrid",
      "type": "",
      "desc": "Set whether to expand all rows.",
      "defaultValue": ""
    },
    {
      "name": "setAllSelection(checked)",
      "sample": "grid-operation-column#tiny-first-menu-custom-serial-column",
      "type": "",
      "desc": "The input parameter is boolean, which is used to select multiple lines and set the selected status of all lines.",
      "defaultValue": ""
    },
    {
      "name": "setAllTreeExpansion(checked)",
      "sample": "grid-tree-grid#tree-table-tree-grid-operation-column",
      "type": "",
      "desc": "Sets whether to expand all tree nodes.",
      "defaultValue": ""
    },
    {
      "name": "setCurrentRow(row)",
      "sample": "grid-highlight#highlight-highlight-hover-row",
      "type": "",
      "desc": "Sets the highlight status of a row for the current row.",
      "defaultValue": ""
    },
    {
      "name": "setRadioRow(row)",
      "sample": "grid-operation-column#tiny-first-menu-default-serial-column",
      "type": "",
      "desc": "Select a row and set the selected status of a row.",
      "defaultValue": ""
    },
    {
      "name": "setRowExpansion(rows, checked)",
      "sample": "grid-nested-grid#grid_Example-nestedGrid",
      "type": "",
      "desc": "Set the expansion row, and set whether to expand the row.",
      "defaultValue": ""
    },
    {
      "name": "setSelection(rows, checked)",
      "sample": "grid-operation-column#tiny-first-menu-custom-serial-column",
      "type": "",
      "desc": "This parameter is used to select multiple lines. The second parameter is whether to select or not.",
      "defaultValue": ""
    },
    {
      "name": "setTreeExpansion(rows, checked)",
      "sample": "grid-tree-grid#tree-table-tree-grid-operation-column",
      "type": "",
      "desc": "Set the expansion tree node and set whether to expand the row.",
      "defaultValue": ""
    },
    {
      "name": "showColumn(column)",
      "sample": "grid-customized#custom-column-visible-hidden",
      "type": "",
      "desc": "Display the specified column.",
      "defaultValue": ""
    },
    {
      "name": "sort(field, order)",
      "sample": "grid-sort#sort-custom-sort",
      "type": "",
      "desc": "Sort the table manually. If the value of order is empty, the table is automatically sorted.",
      "defaultValue": ""
    },
    {
      "name": "toggleAllSelection()",
      "sample": "grid-operation-column#tiny-first-menu-custom-serial-column",
      "type": "",
      "desc": "Selection of multiple lines and switch the selected status of all lines.",
      "defaultValue": ""
    },
    {
      "name": "toggleRowExpansion(row)",
      "sample": "grid-nested-grid#grid_Example-nestedGrid",
      "type": "",
      "desc": "For expanding tables or switching rows.",
      "defaultValue": ""
    },
    {
      "name": "toggleRowSelection(row)",
      "sample": "grid-operation-column#tiny-first-menu-custom-serial-column",
      "type": "",
      "desc": "Selection of multiple lines and switch the selected status of a line.",
      "defaultValue": ""
    },
    {
      "name": "toggleTreeExpansion(row)",
      "sample": "grid-tree-grid#tree-table-tree-grid-operation-column",
      "type": "",
      "desc": "This parameter is used to switch and expand tree nodes in a tree table.",
      "defaultValue": ""
    },
    {
      "name": "validate(rows, callback)",
      "sample": "grid-validation#grid_Example-gridValid-before-submit-validation",
      "type": "",
      "desc": "Table verification function. If a row or rows is specified, the specified row or multiple rows are verified. Otherwise, the entire table is verified. This callback function is called after the verification is complete and the following parameters are transferred: (Whether the verification is successful. The fields in the latest column fail the verification.) If no callback function is passed in, a promise is returned",
      "defaultValue": ""
    }
  ],
  "gridevents": [
    {
      "name": "page-change",
      "sample": "grid-event#event-page-change-event",
      "type": "Object(arg)",
      "desc": "This event is valid only when pager-config is configured. This event is triggered when the paging is changed. //Parameter arg\n {$grid: VueComponent, //table component vue instance\ncurrentPage: 1 //Current page number\nlayout:' total, prev, pager, next, jumper, sizes '//Current page component layout information\npageSize: 10//Current number of records displayed on each page\npageSize: [5, 10] //Number of records on each page that can be switched\ntotal: 10 //Total number of records}",
      "defaultValue": ""
    },
    {
      "name": "before-page-change",
      "sample": "grid-event#event-page-change-event",
      "type": "Function(arg)",
      "desc": "triggered when the page is changed and the page is turned or the page size is changed. / / Parameter arg:\n{newPage, // New page size\nnewPageSize// New page size\ncurrentPage,// Current page size\ncurrentPageSize, // Current page size\ncallback, // Validate the rollback\nrollback// Invalidate the rollback\nrollback,// Rollback, which may not exist}",
      "defaultValue": ""
    },
    {
      "name": "toolbar-button-click",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "Function(arg, event)",
      "desc": "This event is valid only when toolbar.buttons are configured. This event is triggered when a toolbar button is clicked. //arg1: \n{$grid: VueComponent, // table component instance object information\nbutton, // Button information object\ncode// Button function type \n}\n //arg2:\nevent// native click event",
      "defaultValue": ""
    },
    {
      "name": "cell-click",
      "sample": "grid-event#event-cell-click-event",
      "type": "Function(arg1, event)",
      "desc": "This event is triggered when a cell is clicked. arg1: {row: current row, rowIndex: subscript of the current row, column: current column, columnIndex: current column subscript}",
      "defaultValue": ""
    },
    {
      "name": "cancel-page-change",
      "sample": "grid-pager#pager-inner-pager",
      "type": "Function()",
      "desc": "When there is unsaved data during pagination switchover, a dialog box is displayed to determine the button event.",
      "defaultValue": ""
    },
    {
      "name": "cell-context-menu",
      "sample": "grid-context-menu#grid_Example-shortcutMenu-menu-permissions",
      "type": "Function(arg)",
      "desc": "This event is triggered when a cell is right-clicked. arg:{row:current row}",
      "defaultValue": ""
    },
    {
      "name": "cell-dblclick",
      "sample": "grid-event#event-cell-dblclick-event",
      "type": "Function(arg1, event)",
      "desc": "This event is triggered when a cell is double-clicked. //arg1\n{row, // Current row\nrowIndex, // Current row's subscript\ncolumn, // Current row's subscript\ncolumnIndex// Current row's subscript\n}, \neevent //Click Event",
      "defaultValue": ""
    },
    {
      "name": "cell-mouseenter",
      "sample": "grid-event#event-cell-mouseenter-event",
      "type": "Function(arg1, event)",
      "desc": "This event is triggered when the cell hovers. //arg1\n{row, // Current row\nrowIndex, // Subscript of current row\ncolumn, // Current column\ncolumnIndex// Current column\n}, \neevent //Native event",
      "defaultValue": ""
    },
    {
      "name": "cell-mouseleave",
      "sample": "grid-event#event-cell-mouseleave-event",
      "type": "",
      "desc": "This event is triggered when the cell hovers.",
      "defaultValue": ""
    },
    {
      "name": "context-menu-click",
      "sample": "grid-context-menu#grid_Example-shortcutMenu-header-menu",
      "type": "Function(arg1)",
      "desc": "This event is valid only when context-menu is configured. This event is triggered when the shortcut menu is clicked. //arg1\n{table: VueComponent, //table component vue instance\ncell, //Dom\ncolumn of the clicked cell, //Column configuration information\ncolumnIndex:Number,//Click the index of the column\ncolumns:Array,//Information about all columns}, \nmenu:Object,//Configuration of the current context menu, options: Arry,//Configuration list of the context menu\nrow: Object, //Data of the row where the clicked cell is located\nrowIndex: 1,//Index of the row where the clicked cell is located\ntype:'body'//Display position of the context menu}",
      "defaultValue": ""
    },
    {
      "name": "current-change",
      "sample": "grid-highlight#highlight-highlight-cell",
      "type": "Function(arg1, arg2)",
      "desc": "This parameter is valid only for highlightCurrentRow. This parameter is triggered when a row is manually selected and the value changes. arg1:Object: The information object related to the row is manually selected. arg2:event.",
      "defaultValue": ""
    },
    {
      "name": "edit-actived",
      "sample": "grid-event#event-edit-actived-event",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell is activated for editing. arg1: Object activates and edits the related information object of the cell, arg2: event",
      "defaultValue": ""
    },
    {
      "name": "edit-closed",
      "sample": "grid-event#event-edit-closed-event",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell is closed in the editing state. arg1: Object activates the information object of the editing cell, arg2: event",
      "defaultValue": ""
    },
    {
      "name": "edit-disabled",
      "sample": "grid-event#event-edit-disabled-event",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell is activated and is disabled. arg1: Object activates and edits the related information object of the cell. arg2: event",
      "defaultValue": ""
    },
    {
      "name": "filter-change",
      "sample": "grid-filter#filter-server-filter",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when the filter condition changes. Information object of the //arg1:\n{$table:Object, // table\nfilters,//filtering data information of the filter column},//\narg2:\n{$table:Object,// table\nfilters,//filtering data information of the filter column}",
      "defaultValue": ""
    },
    {
      "name": "footer-cell-click",
      "sample": "grid-event#event-footer-cell-context-menu-event",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell at the end of a table is clicked. //arg1: current table object \n{\n$columnIndex: 2,$rowIndex: 0,$table: VueComponent, //table component vue instance\ncell,// current cell node\ncolumn:ColumnConfig, // current column information \ncolumnIndex: 2}\n//arg2:event // native event",
      "defaultValue": ""
    },
    {
      "name": "footer-cell-context-menu",
      "sample": "grid-context-menu#grid_Example-shortcutMenu-cell-menu",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell at the end of the table is right-clicked. //arg1: current table object \n{\n$columnIndex: 2,$rowIndex: 0,$table: VueComponent, //table component vue instance\ncell,// Current cell node\ncolumn:ColumnConfig, // Current column information \ncolumnIndex: 2, \noptions:Array,// configuration and clearing function information\ntype: 'footer' //Table area type \n}\n//arg2:event // native event",
      "defaultValue": ""
    },
    {
      "name": "footer-cell-dblclick",
      "sample": "grid-footer#footer-footer-summation",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell at the end of a table is double-clicked. //arg1: current table object \n{\n$columnIndex: 2,$rowIndex: 0,$table: VueComponent, //table component vue instance\ncell,// Current cell node\ncolumn:ColumnConfig, // Current column information \ncolumnIndex: 2}\n//arg2:event // native event",
      "defaultValue": ""
    },
    {
      "name": "header-cell-click",
      "sample": "grid-event#event-header-click-event",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell in the table header is clicked. //arg1: current table object \n{\n$columnIndex: 2,$rowIndex: 0,$table: VueComponent, //table component vue instance\ncell,// Click the table header cell \ncolumn:ColumnConfig, // Current column information \ncolumnIndex: 2,\ntriggerFilter:false,// Current click node filter flag \ntriggerSort:false,// Current click node sorting flag}\n//arg2:event // Native event ",
      "defaultValue": ""
    },
    {
      "name": "header-cell-context-menu",
      "sample": "grid-event#event-header-cell-context-menu-event",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a cell in the table header is right-clicked. //arg1: current table object \n{\n$columnIndex: 2,$rowIndex: 0,$table: VueComponent, //table component vue instance\ncell,// Current cell node\ncolumn:ColumnConfig, // Current column information \ncolumnIndex: 2, \noptions:Array,// configuration and clearing function information\ntype: 'header' //Table area type \n}\n//arg2:event // native event",
      "defaultValue": ""
    },
    {
      "name": "header-cell-dblclick",
      "sample": "grid-event#event-header-dblclick-event",
      "type": "Function(arg1, arg2)",
      "desc": "This event is triggered when a table header cell is double-clicked. //arg1:\n{column, //Column data\ncolumnIndex, //Column index\n$table, //Table component vue instance\ncell//Clicked cell dom\n}\n//arg2:\nevent// native event",
      "defaultValue": ""
    },
    {
      "name": "radio-change",
      "sample": "grid-event#event-radio-change-event",
      "type": "Function(arg1, arg2)",
      "desc": "This parameter is valid only for the event whose type is radio. It is triggered when the value is manually selected and the value changes. / / Parameter description:\narg1 $table: VueComponent table Component vue instance \n arg2 event Native radio event object",
      "defaultValue": ""
    },
    {
      "name": "resizable-change",
      "sample": "grid-event#event-resizable-change-event",
      "type": "Function(arg1)",
      "desc": "This event is triggered when the column width changes. //Parameter description of the vue instance of the arg1\n{$table: VueComponent,// table component\ncolumn, //Column configuration information\ncolumnIndex:1//Drag the column index\nfixed//Whether to fix the column}",
      "defaultValue": ""
    },
    {
      "name": "scroll",
      "sample": "grid-event#event-grid-scroll-event",
      "type": "Function(arg, event)",
      "desc": "This event is triggered when the table scrolls. //arg1:\n{\n $table: VueComponent(Table instance object information) \n fixed: undefined\n isX: false: (X axis scrolling) \n isY: true (Y axis scrolling) \n scrollLeft: 0 (X-axis rolling distance)\nscrollTop: 66 (Y-axis rolling distance)\n type: 'body' \n}\n arg2:event",
      "defaultValue": ""
    },
    {
      "name": "select-all",
      "sample": "grid-event#event-select-all-event",
      "type": "Function(arg, event)",
      "desc": "This event is valid only when type=selection and is triggered when all are selected manually. //arg1:\n{\n $table: VueComponent table instance object information\n checked: checked status\n selection: selected table data array \n}\n arg2:event",
      "defaultValue": ""
    },
    {
      "name": "select-change",
      "sample": "grid-event#event-select-change-event",
      "type": "Function(arg, event)",
      "desc": "This event is valid only for type=selection. It is triggered when the value is manually selected and the value changes. //arg1: \n{\n $columnIndex: 0\n $rowIndex: 0\n $seq: '\n $table: VueComponent (Table instance object information) \n checked: true (checked status) \n column: ColumnConfig {...} \n columnIndex: 0 (column subscript)\n data: [{...}, {...}, {...}, {...}, {...}, {...}](Table data) \n fixed: undefined\n isHidden: undefined\n level: 0\n row: {...}(Line data information of selected items)\n rowIndex: 0(Line subscript of selected items)\n selection:[{...}(Selected data) \n seq: 1\n}\n arg2:event",
      "defaultValue": ""
    },
    {
      "name": "toggle-expand-change",
      "sample": "grid-event#event-toggle-expand-change-event",
      "type": "Function(arg, event)",
      "desc": "This event is triggered when a row is expanded or closed. //Parameter arg1: \n{$table: VueComponent,// table instance object information\nrow, // Click to expand the data object \nrowIndex in the row. //Click the subscript of the expanded row} \n //Parameter arg2:\nevent//Event object",
      "defaultValue": ""
    },
    {
      "name": "toggle-tree-change",
      "sample": "grid-event#event-toggle-tree-change-event",
      "type": "Function(arg, event)",
      "desc": "This event is triggered when a tree node is expanded or closed. //Parameter arg1: \n{$table: VueComponent,// table instance object information\nrow,//Click to expand the data information object in the row \nrowIndex,//Click to expand the subscript in the row \n} \n//Parameter arg2:\nevent: Event object",
      "defaultValue": ""
    },
    {
      "name": "valid-error",
      "sample": "grid-event#event-valid-error-event",
      "type": "Function(arg)",
      "desc": "This event is triggered when data verification fails. //Parameter arg:\n{cell,//Cell information object to be verified\ncolumn,//Column configuration information object of the column where the cell is located\nrow,//Information object of the row where the cell is located\nrule//Check rule information object}",
      "defaultValue": ""
    },
    {
      "name": "BeforeEdit",
      "sample": "grid-event#event-edit-disabled-event",
      "type": "",
      "desc": "Click a cell to display the events triggered before the component is edited.; Click the cell to display the event triggered before editing the component - the activeMethod method in edit-config",
      "defaultValue": ""
    },
    {
      "name": "CellClick",
      "sample": "grid-event#event-cell-click-event",
      "type": "Function(arg1, event)",
      "desc": "Event triggered by clicking a cell. arg1:{row: current row, rowIndex: subscript of current row, column: current column, columnIndex: current column subscript}, event: click event",
      "defaultValue": ""
    },
    {
      "name": "sort-change",
      "sample": "grid-sort#sort-server-sort",
      "type": "Function(arg)",
      "desc": "Event triggered before data sorting is performed when a column header is clicked.; / / Parameter arg1: \n{$grid: VueComponent,// (Table instance object information\ncolumn:ColumnConfign,//(Column information) \nfield: 'name', / /(sorted field name)\norder: 'asc', / /(sorted type in ascending or descending order)\nprop: 'name', \n property: 'name'}",
      "defaultValue": ""
    },
    {
      "name": "fullscreen",
      "sample": "grid-toolbar#tiny-first-menu-grid-full-screen",
      "type": "",
      "desc": "Time triggered when full screen is enabled or disabled",
      "defaultValue": ""
    }
  ],
  "columnattrs": [
    {
      "name": "align",
      "sample": "grid-align#align-column-align",
      "type": "String",
      "desc": "Column pair mode; The optional values for this property are left, center, right",
      "defaultValue": "The default value of this attribute is the same as that of the inherited table."
    },
    {
      "name": "class-name",
      "sample": "grid-custom-style#custom-style-cell-style",
      "type": "String, Function",
      "desc": "Add a class name to a cell. The class name can also be the Function({seq, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "multi",
      "sample": "grid-filter#filter-default-filter",
      "type": "Boolean",
      "desc": "is an attribute built in the filter object. Whether multiple selections are allowed for filtering. Sets whether to display the check box in the selected column. This parameter is valid only when columnType is set to'select'.",
      "defaultValue": "The default value of this property is true"
    },
    {
      "name": "method",
      "sample": "grid-filter#filter-custom-filter",
      "type": "Function",
      "desc": "In the custom filtering method Function({value, row, column}) built in the filter object",
      "defaultValue": ""
    },
    {
      "name": "fixed",
      "sample": "grid-fixed#fixed-left-fixed",
      "type": "String",
      "desc": "Fix columns on the left. Freezable can be frozen or unfrozen, but can be operated in the table personalized panel. Frozen can only be frozen but cannot be operated in the personalized panel. Fix the column to the left or right (Note: The fixed columns should be placed on the left and right sides.) The optional values of this attribute are left (fixed left) and right (fixed right)",
      "defaultValue": ""
    },
    {
      "name": "footer-align",
      "sample": "grid-align#align-footer-align-left-footer-align",
      "type": "String",
      "desc": "Alignment mode of the column at the end of the table; The optional values for this property are left, center, right",
      "defaultValue": "The default value of this attribute is inherit align > inherit table footer-align"
    },
    {
      "name": "footer-class-name",
      "sample": "grid-footer#footer-footer-class-name",
      "type": "String, Function",
      "desc": "Add a class name to the cell at the end of the table. The class name can also be the Function({$rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "header-align",
      "sample": "grid-align#align-header-align-left-header-align",
      "type": "String",
      "desc": "The alignment mode of the table header column; The optional values for this property are left, center, right",
      "defaultValue": "The default value of this attribute is inherit align > inherit the header-align of table"
    },
    {
      "name": "header-class-name",
      "sample": "grid-header#header-header-class-name",
      "type": "String, Function",
      "desc": "Set the column header style name. Add className to the cell in the table header, or the function Function({$rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "index-method",
      "sample": "grid-serial-column#tiny-first-menu-custom-serial-column",
      "type": "Function",
      "desc": "This parameter is valid only for type=index. The user-defined index method is Function({row, rowIndex, column, columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "min-width",
      "sample": "grid-width-height#tiny-first-menu-min-width",
      "type": "Number, String",
      "desc": "Minimum column width; The remaining space will be allocated in proportion. The optional values of this property are integers, px,%",
      "defaultValue": "The default value of this attribute is column-min-width of the table."
    },
    {
      "name": "show-icon",
      "sample": "grid-edit#tiny-first-menu-cell-editing",
      "type": "Boolean",
      "desc": "Whether to display the column header editing icon. This parameter is valid during editing.",
      "defaultValue": "The default value of this property is true"
    },
    {
      "name": "params",
      "sample": "grid-filter#column-column-params",
      "type": "Object",
      "desc": "Extra parameters (User-defined data parameters, which may be used in some special scenarios)",
      "defaultValue": ""
    },
    {
      "name": "remote-sort",
      "sample": "grid-sort#sort-server-sort",
      "type": "Boolean",
      "desc": "Whether to use server sorting. If this parameter is set to true, data will not be processed.",
      "defaultValue": "The default value of this attribute is inherited from the remote-sort of the table."
    },
    {
      "name": "resizable",
      "sample": "grid-width-height#tiny-first-menu-resize-column-width",
      "type": "Boolean",
      "desc": "Set whether the column width can be adjusted. Allows you to drag the column width to adjust the column size.",
      "defaultValue": "The default value of this attribute is resizable that inherits the table"
    },
    {
      "name": "show-header-overflow",
      "sample": "grid-tip#tip-column-header-tip",
      "type": "String,Boolean",
      "desc": "When the table header content is too long, the ellipsis is displayed. The optional values for this property are ellipsis (only the ellipsis is displayed), title (and the native title is displayed), tooltip (and the tooltip prompt is displayed)",
      "defaultValue": "The default value of this attribute is the show-header-overflow inherited from the table."
    },
    {
      "name": "show-overflow",
      "sample": "grid-tip#tip-cell-tip",
      "type": "String,Boolean",
      "desc": "When the content is too long, an ellipsis is displayed. The optional values for this property are ellipsis (only the ellipsis is displayed), title (and the native title is displayed), tooltip (and the tooltip is displayed)",
      "defaultValue": "The default value of this attribute is the show-overflow inherited from the table."
    },
    {
      "name": "sort-by",
      "sample": "grid-sort#sort-combinations-sort",
      "type": "String, Array",
      "desc": "This parameter is valid only for sortable. It is a user-defined sorting attribute.",
      "defaultValue": ""
    },
    {
      "name": "rules",
      "sample": "",
      "type": "Object",
      "desc": "Form verification function",
      "defaultValue": ""
    },
    {
      "name": "required",
      "sample": "grid-validation#grid_Example-gridValid-editing-validation",
      "type": "Boolean",
      "desc": "Mandatory. If this parameter is not set, the system will automatically generate a value based on the verification rule.",
      "defaultValue": "The default value of this attribute is false"
    },
    {
      "name": "sort-method",
      "sample": "grid-sort#sort-custom-sort",
      "type": "Function",
      "desc": "Customize the sorting method of all columns. When sorting is triggered, the function Function({data, column, property, order}) is invoked to return the sorting result.",
      "defaultValue": ""
    },
    {
      "name": "sortable",
      "sample": "grid-sort#sort-default-sort",
      "type": "Boolean",
      "desc": "Whether the data in the column can be sorted.; Allow Sorting Columns",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "title",
      "sample": "grid-data-source#tiny-first-menu-static-data",
      "type": "String , Function",
      "desc": "Column title (internationalization can be enabled). It can be the function Function(h, params)",
      "defaultValue": ""
    },
    {
      "name": "tree-node",
      "sample": "grid-tree-grid#tree-table-tree-grid-base",
      "type": "Boolean",
      "desc": "This parameter is valid only when tree-config is configured. It is specified as a tree node.",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "format-value",
      "sample": "grid-edit#tiny-first-menu-format-value",
      "type": "Function",
      "desc": "Incoming value of formatting the cell editor component",
      "defaultValue": ""
    },
    {
      "name": "format-text",
      "sample": "grid-renderer#grid_Example-gridRenderer-inner-renderer",
      "type": "String , Function",
      "desc": "Sets the display and editing mode of the current table column. Sets the display and obtaining editing type of the current table column. It can also be the function Function(params). The optional value of this property is money / enum / select / number / integer / filesize / date / dateTime / longDateTime / time / longTime / yearMonth / ellipsis / rate / boole",
      "defaultValue": ""
    },
    {
      "name": "type",
      "sample": "grid-serial-column#tiny-first-menu-default-serial-column",
      "type": "String",
      "desc": "Set the type of the built-in column. Set the type of the built-in column. The available values of this attribute are index (serial number), selection (check box), radio (single box), and expand (expand row)",
      "defaultValue": ""
    },
    {
      "name": "width",
      "sample": "grid-width-height#tiny-first-menu-fixed-column-width",
      "type": "Number , String",
      "desc": "Set the column width. The value can be pixel, percentage, or auto. If the value is auto, the column width automatically adapts.; column width; The optional value of this property is integer/px/%",
      "defaultValue": "The default value of this attribute is the column-width of the inherited table."
    },
    {
      "name": "format-config",
      "sample": "grid-data-source#tiny-first-menu-column-asyn-rendering",
      "type": "Object",
      "desc": "Enable the asynchronous rendering of the column data.; {data: [], // Column data source\n type:'', // Built-in renderer type, which is the same as the format-text attribute.\n async: true, // Data can be dynamically modified after the value is set to true. You can also configure it as an object. If you configure it as an object, you can configure splitConfig.enabled (whether to enable the separation configuration), splitConfig.valueSplit (separator of the specified value), splitConfig.textSplit (separator of the specified text), and fetch (column data asynchronous). Render, request data)\n label:''//Mapping of the cell display content\n value:''//Mapping of the cell value}",
      "defaultValue": ""
    },
    {
      "name": "class-name",
      "sample": "grid-custom-style#custom-style-cell-style",
      "type": "String, Function",
      "desc": "Add a class name to a cell. The class name can also be the function Function({seq, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "editor",
      "sample": "grid-edit#tiny-first-menu-custom-editing",
      "type": "Object , Function",
      "desc": "Cell editing rendering configuration item, which can also be the function Function(h, params). Sets the editing type of the table column. Valid when editMode is true and editabele is true.",
      "defaultValue": ""
    },
    {
      "name": "filter",
      "sample": "grid-filter#filter-default-filter",
      "type": "Boolean , Object",
      "desc": "Set the filtering configuration of the table column. The default value is false. No filtering information is configured.",
      "defaultValue": "The default value of this attribute is false"
    },
    {
      "name": "renderer",
      "sample": "grid-renderer#grid_Example-gridRenderer-custom-renderer",
      "type": "Object , Function",
      "desc": "Set the rendering type of the table column. The priority of the column is higher than that of the column type attribute. Cell rendering configuration item. Its priority is higher than that of the formatText attribute of the column. It can also be the function Function(h, params)",
      "defaultValue": ""
    },
    {
      "name": "show-tip",
      "sample": "grid-tip#tip-cell-tip",
      "type": "Boolean",
      "desc": "Does the table column cells require prompts?",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "show-header-tip",
      "sample": "grid-tip#tip-column-header-tip",
      "type": "Boolean",
      "desc": "Whether to prompt the table column header.",
      "defaultValue": "The default value of this attribute is false."
    }
  ],
  "columnslots": [
    {
      "name": "default",
      "sample": "grid-header#header-custom-grid-header",
      "type": "",
      "desc": "Customized display content template",
      "defaultValue": ""
    },
    {
      "name": "edit",
      "sample": "grid-editor#grid_Example-gridEdit-custom-editor-select",
      "type": "",
      "desc": "Customized Editable Component Template",
      "defaultValue": ""
    },
    {
      "name": "filter",
      "sample": "grid-filter#filter-custom-filter",
      "type": "",
      "desc": "User-defined filtering template",
      "defaultValue": ""
    },
    {
      "name": "header",
      "sample": "grid-header#header-slot-header",
      "type": "",
      "desc": "Template of custom table header content",
      "defaultValue": ""
    }
  ],
  "toolbarattrs": [
    {
      "name": "buttons",
      "sample": "grid-toolbar#tiny-first-menu-insert-delete-update",
      "type": "Array",
      "desc": "Button List",
      "defaultValue": ""
    },
    {
      "name": "id",
      "sample": "grid-customized#custom-column-width",
      "type": "String",
      "desc": "Unique ID",
      "defaultValue": ""
    },
    {
      "name": "loading",
      "sample": "grid-toolbar#tiny-first-menu-refresh-grid",
      "type": "Boolean",
      "desc": "Loading",
      "defaultValue": "The default value of this property is false"
    },
    {
      "name": "refresh",
      "sample": "grid-toolbar#tiny-first-menu-refresh-grid",
      "type": "Boolean",
      "desc": "The table refresh function is enabled for the toolbar component.",
      "defaultValue": ""
    },
    {
      "name": "resizable",
      "sample": "grid-customized#custom-column-width",
      "type": "Boolean,Object",
      "desc": "Column width dragging configuration (id needs to be set)",
      "defaultValue": ""
    },
    {
      "name": "setting",
      "sample": "grid-customized#custom-column-width",
      "type": "Boolean/Object",
      "desc": "Whether to display the table attribute on the personalized panel. This parameter is valid only when the name attribute of the table is set. Set whether to display personalized configuration for toolbar attributes (id needs to be set)",
      "defaultValue": ""
    },
    {
      "name": "full-screen",
      "sample": "grid-toolbar#tiny-first-menu-grid-full-screen",
      "type": "Boolean",
      "desc": "Sets whether the table can be displayed in full screen mode or whether the container needs to be displayed in full screen mode.; Sets whether to display the full-screen button on the toolbar.",
      "defaultValue": ""
    },
    {
      "name": "size",
      "sample": "grid-toolbar#tiny-first-menu-copy-row-data",
      "type": "String",
      "desc": "Dimension; The options of this attribute are medium, small, and mini",
      "defaultValue": ""
    },
    {
      "name": "before-open-full-screen",
      "sample": "grid-toolbar#tiny-first-menu-grid-full-screen",
      "type": "Function",
      "desc": "Intercept method before full screen Function():Boolean. If false is returned, the full screen is blocked. If true is returned, the full screen is not blocked.",
      "defaultValue": ""
    },
    {
      "name": "before-close-full-screen",
      "sample": "grid-toolbar#tiny-first-menu-grid-full-screen",
      "type": "Function",
      "desc": "Intercept method Function():Boolean before full screen is disabled. If false is returned, the full screen is disabled. If true is returned, the full screen is not disabled.",
      "defaultValue": ""
    }
  ],
  "toolbarslots": [
    {
      "name": "toolbar",
      "sample": "grid-toolbar#tiny-first-menu-custom-toolbar",
      "type": "",
      "desc": "Toolbar slot",
      "defaultValue": ""
    },
    {
      "name": "buttons",
      "sample": "grid-toolbar#tiny-first-menu-export-excel",
      "type": "",
      "desc": "Button List",
      "defaultValue": ""
    },
    {
      "name": "tools",
      "sample": "grid-toolbar#tiny-first-menu-custom-toolbar",
      "type": "",
      "desc": "Tool list on the right",
      "defaultValue": ""
    }
  ],
  "toolbarevents": [
    {
      "name": "button-click",
      "sample": "grid-event#event-toolbar-button-click-event",
      "type": "Function(arg, event)",
      "desc": "This event is triggered when a button on the toolbar is clicked. arg1:{$grid: VueComponent table component instance object information $table: VueComponent table instance object component information button: button list information object code: button type} arg2:event",
      "defaultValue": ""
    },
    {
      "name": "on-before-move",
      "sample": "grid-customized#custom-prsonalized-drag",
      "type": "Function(arg1, arg2)",
      "desc": "event before the personalized panel is dragged. arg1: drag type arg2: drag row information",
      "defaultValue": ""
    }
  ]
}
