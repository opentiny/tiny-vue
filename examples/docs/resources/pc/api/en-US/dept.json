{
  "attrs": [
    {
      "name": "value",
      "sample": "size",
      "type": "String",
      "desc": "Set the display value of the department component during initialization.",
      "defaultValue": ""
    },
    {
      "name": "size",
      "sample": "size",
      "type": "String",
      "desc": "Set the component size",
      "defaultValue": ""
    },
    {
      "name": "title",
      "sample": "",
      "type": "String",
      "desc": "Set the pop-up window title.",
      "defaultValue": ""
    },
    {
      "name": "disabled",
      "sample": "dynamic-disable",
      "type": "Boolen",
      "desc": "Disabled",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "autoSelect",
      "sample": "auto-select",
      "type": "Boolen",
      "desc": "Specify that when there is only one piece of department information, the system automatically completes the information.",
      "defaultValue": "The default value of this attribute is true."
    },
    {
      "name": "fetchDeptList",
      "sample": "custom-service",
      "type": "Function",
      "desc": "The interface for querying the customized department list returns a Promise object. This parameter is mandatory when the framework service is not used.",
      "defaultValue": ""
    },
    {
      "name": "fetchDeptByValue",
      "sample": "custom-service",
      "type": "Function",
      "desc": "The interface for querying customized department details returns a Promise object. This parameter is mandatory when the framework service is not used.",
      "defaultValue": ""
    },
    {
      "name": "fetchDept",
      "sample": "custom-service",
      "type": "Function",
      "desc": "The interface for querying customized departments returns a Promise object. This parameter is mandatory when the framework service is not used.",
      "defaultValue": ""
    },
    {
      "name": "beforeConfirm",
      "sample": "before-confirm",
      "type": "Function",
      "desc": "If false is returned or Promise is returned and rejected, the dialog box is not closed.",
      "defaultValue": ""
    }
  ],
  "slots": [
    {
      "name": "hrapprover",
      "sample": "slot-hrapprover",
      "type": "",
      "desc": "Approval",
      "defaultValue": ""
    }
  ],
  "events": [
    {
      "name": "confirm",
      "sample": "dept-confirm",
      "type": "Function",
      "desc": "This event is triggered when the OK button is clicked.",
      "defaultValue": ""
    },
    {
      "name": "cancel",
      "sample": "dept-cancel",
      "type": "Function",
      "desc": "This event is triggered when the Cancel button is clicked.",
      "defaultValue": ""
    },
    {
      "name": "selected",
      "sample": "dept-selected",
      "type": "Function(value)",
      "desc": "This event is triggered when you click a selected department. The callback parameter is the selected department code.",
      "defaultValue": ""
    },
    {
      "name": "open",
      "sample": "dept-events",
      "type": "Function",
      "desc": "This event is triggered when a user clicks a dialog box that is displayed.",
      "defaultValue": ""
    },
    {
      "name": "change",
      "sample": "dept-events",
      "type": "Function(value)",
      "desc": "This event is triggered when the selected department value changes. The callback parameter is the new department code. ; value: changed value",
      "defaultValue": ""
    },
    {
      "name": "close",
      "sample": "dept-close",
      "type": "Function",
      "desc": "This event is triggered when a department dialog box is closed.",
      "defaultValue": ""
    }
  ]
}