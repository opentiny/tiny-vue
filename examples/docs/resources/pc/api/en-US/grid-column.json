{
  "attrs": [
    {
      "name": "align",
      "sample": "grid-align#align-column-align",
      "type": "String",
      "desc": "Column alignment mode; The optional values of this attribute are left (to the left), center (to the center), and right (to the right)",
      "defaultValue": "The default value of this attribute is the align inherited from the table."
    },
    {
      "name": "class-name",
      "sample": "grid-custom-style#custom-style-cell-style",
      "type": "String, Function",
      "desc": "Append the class name to the cell, or the function Function({seq, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "multi",
      "sample": "grid-filter#filter-default-filter",
      "type": "Boolean",
      "desc": "This is a built-in attribute of the filter object. Whether to allow multiple selections. Sets whether to display the Select Column check box. This parameter is valid only when columnType is set to'select'.",
      "defaultValue": "The default value of this attribute is true."
    },
    {
      "name": "method",
      "sample": "grid-filter#filter-custom-filter",
      "type": "Function",
      "desc": "Function({value, row, column}) built-in filter method of the filter object",
      "defaultValue": ""
    },
    {
      "name": "fixed",
      "sample": "grid-fixed#fixed-left-fixed",
      "type": "String",
      "desc": "Fix the column on the left. Freezable can be frozen or unfreezed and can be operated on the table personalized panel. Frozen can only be frozen but cannot be unfreezed and cannot be operated on the personalized panel. Fix the column to the left or right. (Note: The fixed column should be placed on the left and right sides). The options of this attribute are left (fixed to the left) and right (fixed to the right)",
      "defaultValue": ""
    },
    {
      "name": "footer-align",
      "sample": "grid-align#align-footer-align-left-footer-align",
      "type": "String",
      "desc": "Alignment mode of the table tail column; The optional values of this attribute are left (to the left), center (to the center), and right (to the right)",
      "defaultValue": "The default value of this attribute is Inherit align > Inherit footer-align of the table."
    },
    {
      "name": "footer-class-name",
      "sample": "grid-footer#footer-footer-class-name",
      "type": "String, Function",
      "desc": "Add a class name to the cell at the end of the table. The class name can also be the function Function({$rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "header-align",
      "sample": "grid-align#align-header-align-left-header-align",
      "type": "String",
      "desc": "Alignment mode of the table header column; The optional values of this attribute are left (to the left), center (to the center), and right (to the right)",
      "defaultValue": "The default value of this attribute is Inherit align > Inherit table header-align."
    },
    {
      "name": "header-class-name",
      "sample": "grid-header#header-header-class-name",
      "type": "String, Function",
      "desc": "Set the column header style name. Appends a className to the cell in the table header. It can also be a function Function({$rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "index-method",
      "sample": "grid-serial-column#tiny-first-menu-custom-serial-column",
      "type": "Function",
      "desc": "This parameter is valid only for type=index. The index method Function({row, rowIndex, column, columnIndex}) is customized",
      "defaultValue": ""
    },
    {
      "name": "min-width",
      "sample": "grid-width-height#tiny-first-menu-min-width",
      "type": "Number, String",
      "desc": "Minimum column width; The remaining space is automatically allocated proportionally. The optional values of this attribute are integers, px,%",
      "defaultValue": "The default value of this attribute is column-min-width inherited from the table."
    },
    {
      "name": "show-icon",
      "sample": "grid-edit#tiny-first-menu-cell-editing",
      "type": "Boolean",
      "desc": "Indicates whether to display the column header editing icon. This parameter is valid during editing.",
      "defaultValue": "The default value of this attribute is true."
    },
    {
      "name": "params",
      "sample": "grid-filter#filter-default-filter",
      "type": "Object",
      "desc": "Extra parameters (Customize some data parameters, which may be used in some special scenarios.)",
      "defaultValue": ""
    },
    {
      "name": "remote-sort",
      "sample": "grid-sort#sort-server-sort",
      "type": "Boolean",
      "desc": "Indicates whether to use server-side sorting. If this parameter is set to true, data is not processed.",
      "defaultValue": "The default value of this attribute is remote-sort inherited from the table."
    },
    {
      "name": "resizable",
      "sample": "grid-width-height#tiny-first-menu-resize-column-width",
      "type": "Boolean",
      "desc": "Set whether the column width can be adjusted. Whether the column can be resized by dragging the column width",
      "defaultValue": "The default value of this attribute is resizable inherited from the table."
    },
    {
      "name": "show-header-overflow",
      "sample": "grid-tip#tip-column-header-tip",
      "type": "String,Boolean",
      "desc": "If the table header is too long, an ellipsis is displayed. The optional values of this attribute are ellipsis (only the ellipsis is displayed), title (and the native title is displayed), and tooltip (and the tooltip is displayed)",
      "defaultValue": "The default value of this attribute is show-header-overflow inherited from the table."
    },
    {
      "name": "show-overflow",
      "sample": "grid-tip#tip-cell-tip",
      "type": "String,Boolean",
      "desc": "If the content is too long, an ellipsis is displayed. The optional values of this attribute are ellipsis (only the ellipsis is displayed), title (and the native title is displayed), and tooltip (and the tooltip is displayed)",
      "defaultValue": "The default value of this attribute is show-overflow inherited from the table."
    },
    {
      "name": "sort-by",
      "sample": "grid-sort#sort-combinations-sort",
      "type": "String, Array",
      "desc": "This parameter is valid only for sortable. It is a user-defined sorting attribute.",
      "defaultValue": ""
    },
    {
      "name": "rules",
      "sample": "",
      "type": "Object",
      "desc": "Form verification function",
      "defaultValue": ""
    },
    {
      "name": "required",
      "sample": "grid-validation#grid_Example-gridValid-editing-validation",
      "type": "Boolean",
      "desc": "Indicates whether this parameter is mandatory. If this parameter is not set, the parameter is automatically generated based on the verification rule.",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "sort-method",
      "sample": "grid-sort#sort-custom-sort",
      "type": "Function",
      "desc": "Customize the sorting method of all columns. When sorting is triggered, the function Function({data, column, property, order}) is invoked to return the sorting result.",
      "defaultValue": ""
    },
    {
      "name": "sortable",
      "sample": "grid-sort#sort-default-sort",
      "type": "Boolean",
      "desc": "Sets whether the data in the column can be sorted. ;Whether column sorting is allowed",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "title",
      "sample": "grid-data-source#tiny-first-menu-static-data",
      "type": "String , Function",
      "desc": "Column title (internationalization can be enabled), which can be Function(h, params)",
      "defaultValue": ""
    },
    {
      "name": "tree-node",
      "sample": "grid-tree-grid#tree-table-tree-grid-base",
      "type": "Boolean",
      "desc": "This parameter is valid only when tree-config is configured. It is a tree node.",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "format-value",
      "sample": "grid-edit#tiny-first-menu-format-value",
      "type": "Function",
      "desc": "Format the input value of the cell editor component",
      "defaultValue": ""
    },
    {
      "name": "format-text",
      "sample": "grid-renderer#grid_Example-gridRenderer-inner-renderer",
      "type": "String , Function",
      "desc": "Set the display obtaining editing type of the current table column. Sets the display obtaining editing type of the current table column. The function can also be Function(params). The optional value of this attribute is money / enum / select / number / integer / filesize / date / dateTime / longDateTime / time / longTime / yearMonth / ellipsis / rate / boole",
      "defaultValue": ""
    },
    {
      "name": "type",
      "sample": "grid-serial-column#tiny-first-menu-default-serial-column",
      "type": "String",
      "desc": "Set the type of the built-in column. Set the type of the built-in column. The value of this attribute can be index (sequence number), selection (check box), radio (radio button), or expand (expand row)",
      "defaultValue": ""
    },
    {
      "name": "width",
      "sample": "grid-width-height#tiny-first-menu-fixed-column-width",
      "type": "Number , String",
      "desc": "This parameter specifies the width of a column. The value can be pixel, percentage, or auto. When this parameter is set to auto, the column width is automatically adapted. ;column width; The optional values for this attribute are integers / px /%",
      "defaultValue": "The default value of this attribute is column-width inherited from the table."
    },
    {
      "name": "format-config",
      "sample": "grid-data-source#tiny-first-menu-column-asyn-rendering",
      "type": "Object",
      "desc": "Enable asynchronous rendering of data in this column. ; {data: [], // Column data source \n type: '', // Built-in render type, which is the same as the value of format-text.\n async: true, // After this parameter is set to true, data can be dynamically modified. It can also be configured as an object. When it is configured as an object, splitConfig.enabled (whether to enable the separation configuration), splitConfig.valueSplit (specify the separator of the value), splitConfig.textSplit (specify the separator of the text), and fetch (asynchronous column data) can be configured in the object. Rendering, request data)\n label: ''//Mapping of cell display content\n value: ''//Mapping of cell value}",
      "defaultValue": ""
    },
    {
      "name": "class-name",
      "sample": "grid-custom-style#custom-style-cell-style",
      "type": "String, Function",
      "desc": "Append the class name to the cell, or the function Function({seq, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex})",
      "defaultValue": ""
    },
    {
      "name": "editor",
      "sample": "grid-edit#tiny-first-menu-custom-editing",
      "type": "Object , Function",
      "desc": "Cell editing and rendering configuration item, which can also be Function(h, params); Set the edit type of the table column. This parameter is valid only when editMode is set to true and editabele is set to true.",
      "defaultValue": ""
    },
    {
      "name": "field",
      "sample": "grid-align#align-column-align",
      "type": "String",
      "desc": "Sets the field name of the data source corresponding to the table column. Note: This parameter cannot contain a semicolon ('). ', a character string starting with a digit. Chinese characters are not supported. Column field repetition is not supported. (This will cause configuration of personalized settings and invalid dragging of customized columns)",
      "defaultValue": ""
    },
    {
      "name": "filter",
      "sample": "grid-filter#filter-default-filter",
      "type": "Boolean , Object",
      "desc": "Set the filtering configuration of the table column. The default value is false. No filtering information is configured.",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "renderer",
      "sample": "grid-renderer#grid_Example-gridRenderer-custom-renderer",
      "type": "Object , Function",
      "desc": "Set the rendering type of a table column. It has a higher priority than the type attribute configuration of the column. Cell rendering configuration item. The priority of the configuration item is higher than that of the formatText attribute of the column. It can also be the function Function(h, params)",
      "defaultValue": ""
    },
    {
      "name": "show-tip",
      "sample": "grid-tip#tip-cell-tip",
      "type": "Boolean",
      "desc": "Whether to prompt cells in the table column",
      "defaultValue": "The default value of this attribute is false."
    },
    {
      "name": "show-header-tip",
      "sample": "grid-tip#tip-column-header-tip",
      "type": "Boolean",
      "desc": "Whether to prompt table column headers",
      "defaultValue": "The default value of this attribute is false."
    }
  ],
  "slots": [
    {
      "name": "default",
      "sample": "grid-header#header-custom-grid-header",
      "type": "",
      "desc": "Custom Content Template",
      "defaultValue": ""
    },
    {
      "name": "edit",
      "sample": "grid-editor#grid_Example-gridEdit-custom-editor-select",
      "type": "",
      "desc": "Customize an editable component template",
      "defaultValue": ""
    },
    {
      "name": "filter",
      "sample": "grid-filter#filter-custom-filter",
      "type": "",
      "desc": "Custom Filter Template",
      "defaultValue": ""
    },
    {
      "name": "header",
      "sample": "grid-header#header-slot-header",
      "type": "",
      "desc": "User-defined table header content template",
      "defaultValue": ""
    }
  ]
}
