[
  {
    "title": "Basic Usage",
    "content": "The value of <p><code>v-model</code> is the value of the <code>value</code> attribute of the currently selected <code>tiny-option</code>. </p>\n",
    "link": "select/basic-usage",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "basic-usage"
  },
  {
    "title": "Multiple Choices",
    "content": "<p>The <code>multiple</code> attribute is used to enable the multi-selection function. In this case, the value of <code>v-model</code> is an array of selected values. By default, the selected value is displayed as a tag. </p>\n",
    "link": "select/multiple",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "multiple"
  },
  {
    "title": "Collapse Tag",
    "content": "<p>When you select multiple values, you can set the <code>collapse-tags</code> attribute to combine the selected values into a text. </p>\n",
    "link": "select/collapse-tags",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "collapse-tags"
  },
  {
    "title": "Set the text box type",
    "content": "<p>You can set <code>input-box-type</code> to underline. </p>\n",
    "link": "select/input-box-type",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "input-box-type"
  },
  {
    "title": "Maximum number of options",
    "content": "The <p><code>multiple-limit</code> attribute specifies the maximum number of items that can be selected by the user during multiple selection. The default value is 0, which is not limited. </p>\n",
    "link": "select/multiple-limit",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "multiple-limit"
  },
  {
    "title": "Big Data Virtual Scrolling",
    "content": "<p>You can set the options in the <code>options</code> drop-down list box and set <code>optimization</code> to enable the big data virtual scrolling function. Virtual scrolling is not supported when using the label configuration option. \nIn multi-choice mode, the maximum number of selected items <code>multiple-limit</code> is 20 by default. If a large number of selected items are selected, you are advised to enable <code>collapse-tags</code> to collapse the display. </p>\n",
    "link": "select/optimization",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "optimization"
  },
  {
    "title": "Disabled",
    "content": "<p>After the <code>disabled</code> property is set, the entire selector is unavailable. </p>\n",
    "link": "select/disabled",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "disabled"
  },
  {
    "title": "Some options in the drop-down list box are disabled.",
    "content": "This option is unavailable after the <code>disabled</code> attribute is set for the <p>tiny-options tag. </p>\n",
    "link": "select/disabled-options",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "disabled-options"
  },
  {
    "title": "By default, multiple options in the drop-down list are selected and disabled.",
    "content": "<p>After the <code>disabled</code> attribute is set for the default selected tag, this option is disabled. </p>\n",
    "link": "select/disabled-and-selected-options",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "disabled-and-selected-options"
  },
  {
    "title": "medium",
    "content": "<p>The <code>size</code> attribute defines the text box size. The options are medium, small, and mini. \n Use <code>options</code> to configure the Select data item. After using the data item, you do not need to configure tiny-option. </p>\n",
    "link": "select/size-medium",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "size-medium"
  },
  {
    "title": "small",
    "content": "For details, see the following example.",
    "link": "select/size-small",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "size-small"
  },
  {
    "title": "mini",
    "content": "For details, see the following example.",
    "link": "select/size-mini",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "size-mini"
  },
  {
    "title": "Group",
    "content": "<p> uses <code>tiny-option-group</code> to group options. The <code>label</code> attribute is the group name. Use the <code>disabled</code> attribute to disable all options in the group. </p>\n",
    "link": "select/option-group",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "option-group"
  },
  {
    "title": "Disable some options for grouping",
    "content": "<p>Use <code>tiny-option-group</code> to group options and disable some grouping. </p>\n",
    "link": "select/option-group-disable",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "option-group-disable"
  },
  {
    "title": "change clear blur focus event",
    "content": "Description of the <div class=\"tip custom-block\"><p class=\"custom-block-title\"> event</p>\n<p>change: triggered when the selected value changes. The callback parameter is the current selected value.\nclear: triggered when the user clicks the clear button in the option mode.\nblur: triggered when the input loses the focus.\nfocus: </p>\n</div>\n is triggered when the input is focused",
    "link": "select/envts-change",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "envts-change"
  },
  {
    "title": "visible-change remove-tag event",
    "content": "<div class=\"tip custom-block\"><p class=\"custom-block-title\"> Event Description</p>\n<p>visible-change: Triggered when the drop-down list box is displayed or hidden. The callback parameter is true if the drop-down list box is displayed or false if the drop-down list box is hidden.\nremove-tag: Triggered when the tag is removed in multi-select mode. The callback parameter is the removed tag value </p>\n</div>\n",
    "link": "select/envts-remove",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "envts-remove"
  },
  {
    "title": "Searchable",
    "content": "<p>The <code>filterable</code> property enables the search function. By default, Select finds all options for which the <code>label</code> property contains the entered value. If you want to use other search logic, you can pass in a <code>filter-method</code>. <code>filter-method</code> is a function. It is invoked when the input value changes. The parameter is the current input value. </p>\n",
    "link": "select/filter-method",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "filter-method"
  },
  {
    "title": "The search allows copying",
    "content": "<p>In the search scenario, the content in the text box cannot be copied. You need to add the <code>allow-copy</code> attribute to copy the content. The <code>allow-copy</code> attribute defaults to <code>false</code>. \nWhen hovering the mouse over the text box, press and move the mouse to select the previous text. \n When you hover the cursor over the text box and click the left mouse button, the input content changes to placeholder, the content is cleared, and the input state is entered. </p>\n",
    "link": "select/search-allow-copy",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "search-allow-copy"
  },
  {
    "title": "Create Item",
    "content": "<p>The <code>allow-create</code> attribute allows you to create a new entry that does not exist in the option by entering text in the text box. Note that the <code>filterable</code> attribute must be true at this point. After the <code>default-first-option</code> attribute is set to true, you can press Enter to select the first option in the current option list. You do not need to use the mouse or keyboard arrow keys to locate the option. </p>\n",
    "link": "select/allow-create",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "allow-create"
  },
  {
    "title": "Remote Search",
    "content": "<p>To enable remote search, set <code>filterable</code> and <code>remote</code> to <code>true</code>. In addition, a <code>remote-method</code> is transferred. <code>remote-method</code> is a function. It is invoked when the input value changes. The parameter is the current input value. When the <code>reserve-keyword</code> attribute has multiple options and is searchable, the current search keyword can be retained after an option is selected. </p>\n",
    "link": "select/remote-method",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "remote-method"
  },
  {
    "title": "Remote search is triggered when the focus is obtained.",
    "content": "For details, see the following example.",
    "link": "select/focus-remote-method",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "focus-remote-method"
  },
  {
    "title": "Remote search allows replication",
    "content": "<p>In the remote search scenario, the content in the text box cannot be copied. You need to add the <code>allow-copy</code> attribute to copy the content. The <code>allow-copy</code> attribute defaults to <code>false</code>. \nWhen hovering the mouse over the text box, press and move the mouse to select the previous text. \n When you hover the cursor over the text box and click the left mouse button, the input content changes to placeholder, the content is cleared, and the input state is entered. </p>\n",
    "link": "select/remote-search-allow-copy",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "remote-search-allow-copy"
  },
  {
    "title": "Options can be cleared",
    "content": "<p>You can use the <code>clearable</code> attribute to clear the selector. When you hover the cursor over the selector, the clear icon is displayed. Note that the <code>clearable</code> attribute applies only to single selection. </p>\n",
    "link": "select/clearable",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "clearable"
  },
  {
    "title": "name",
    "content": "<p>You can set the name attribute through the <code>name</code> attribute</p>\n",
    "link": "select/name",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "name"
  },
  {
    "title": "Select selector options can be copied",
    "content": "<p>After the <code>tag-selectable</code> attribute is set, the selected options in the text box can be selected by using the mouse, and then you can press Ctrl + C or right-click to copy the options. </p>\n",
    "link": "select/tag-select",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "tag-select"
  },
  {
    "title": "The Select selector option can be copied to all.",
    "content": "<p>After the <code>copyable</code> attribute is set, all <code>tag</code> text contents can be copied and separated by commas.</p>\n",
    "link": "select/tag-copy-all",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "tag-copy-all"
  },
  {
    "title": "Bound Value Object",
    "content": "<p>If the bound value is an object, the <code>value-key</code> attribute must be configured to specify the key name uniquely identified by the value. </p>\n",
    "link": "select/binding-obj",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "binding-obj"
  },
  {
    "title": "Customized search text without matching",
    "content": "<p>You can use the <code>no-match-text</code> attribute to customize the text displayed when no search criteria are matched. </p>\n",
    "link": "select/no-match-text",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "no-match-text"
  },
  {
    "title": "Customized text for empty data display",
    "content": "<p>You can use the <code>no-data-text</code> attribute to customize the text displayed when the option is empty. </p>\n <p>You can set the <code>show-empty-image</code> attribute to display empty data images. By default, empty data images are not displayed. </p>\n",
    "link": "select/no-data-text",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "no-data-text"
  },
  {
    "title": "Pop-up dialog box style and positioning",
    "content": "<p>You can use the <code>popper-class</code> attribute to customize the style of the drop-down list box. <code>popper-append-to-body</code>\t Specifies whether to insert a pop-up into the body element. If a fault occurs in locating the dialog box that is displayed, set this parameter to false. </p>\n",
    "link": "select/popup-style-position",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "popup-style-position"
  },
  {
    "title": "The drop-down menu is displayed when the focus is obtained.",
    "content": "<p>After <code>automatic-dropdown</code> is set to true, the option menu is automatically displayed after the focus is obtained in the text box. </p>\n",
    "link": "select/automatic-dropdown",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "automatic-dropdown"
  },
  {
    "title": "Custom header content",
    "content": "<p>Customize the header content of the text box through the <code>prefix</code> slot. </p>\n",
    "link": "select/custom-prefix",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "custom-prefix"
  },
  {
    "title": "User-defined drop-down list",
    "content": "<p> is implemented through the default slot of Option. Insert the customized HTML template into the slot of <code>tiny-option</code>. </p>\n",
    "link": "select/custom-options",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "custom-options"
  },
  {
    "title": "The Select All option is not displayed.",
    "content": "If <p><code>show-alloption</code> is set to false, the <code>Select All</code> option is not displayed. The default value is true. </p>\n",
    "link": "select/show-alloption",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "show-alloption"
  },
  {
    "title": "Change the value in the text box.",
    "content": "For details, see the following example.",
    "link": "select/set-input-value",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "set-input-value"
  },
  {
    "title": "Manually obtaining the focus",
    "content": "<p>Invoke the <code>focus()</code> method to focus the input. </p>\n",
    "link": "select/manual-focus-blur",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "manual-focus-blur"
  },
  {
    "title": "The drop-down list follows the width of the text box.",
    "content": "<p>The <code>is-drop-inherit-width</code> attribute is used to set whether the drop-down list box follows the width of the text box. The default value is <code>false</code>, indicating that the content is not followed. The width of the drop-down list can be expanded. If the value is <code>true</code>, the content is followed. </p>\n",
    "link": "select/is-drop-inherit-width",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "is-drop-inherit-width"
  },
  {
    "title": "Empty data slot",
    "content": "<p>Use <code>empty</code> to set the message displayed when there is no data. </p>\n",
    "link": "select/slot-empty",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "slot-empty"
  },
  {
    "title": "Default slot",
    "content": "<p>by <code>default</code>default slot list. </p>\n",
    "link": "select/slot-default",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "slot-default"
  },
  {
    "title": "Nested Grid",
    "content": "For details, see the following example.",
    "link": "select/nest-radio-grid",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-radio-grid"
  },
  {
    "title": "Nested grid, which can be searched for and cleared.",
    "content": "For details, see the following example.",
    "link": "select/nest-checkbox-grid-clearable",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-checkbox-grid-clearable"
  },
  {
    "title": "Nested Multi-choice Grid",
    "content": "For details, see the following example.",
    "link": "select/nest-checkbox-grid",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-checkbox-grid"
  },
  {
    "title": "text-field",
    "content": "For details, see the following example.",
    "link": "select/nest-checkbox-grid",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-checkbox-grid1"
  },
  {
    "title": "value-field",
    "content": "For details, see the following example.",
    "link": "select/nest-checkbox-grid",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-checkbox-grid2"
  },
  {
    "title": "Nested Grid data item disabled",
    "content": "<p>In the drop-down list box, the attribute <code>checkMethod</code> of the <code>select-config</code> configuration item is used to determine which data items are disabled. The method determines each data item. If the return value is <code>true</code> or <code>false</code>, the data item is enabled or disabled. Select a single option from the drop-down list box. The attribute <code>checkMethod</code> of the <code>radio-config</code> configuration item is used to determine which data items are disabled. The method determines each data item. If the return value is <code>true</code> or <code>false</code>, the data item is enabled or disabled. </p>\n",
    "link": "select/disable-grid-select-radio",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "disable-grid-select-radio"
  },
  {
    "title": "Enabling Remote Search for Nested Grids (Multiple Choices)",
    "content": "<p>Set <code>render-type</code> to <code>grid</code> nested grid; Set <code>filterable</code> and <code>remote</code> to <code>true</code> and pass in the <code>remote-method</code> method to enable remote search. To automatically search for and display the expansion button, set <code>remote-config</code> </p>\n",
    "link": "select/nest-grid-remote-filter",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-grid-remote-filter"
  },
  {
    "title": "Nested Grid Enable Remote Search (Single Choice)",
    "content": "<p>Set <code>render-type</code> to <code>grid</code> nested grid; Set <code>filterable</code> and <code>remote</code> to <code>true</code> and pass in the <code>remote-method</code> method to enable remote search. To automatically search for and display the expansion button, set <code>remote-config</code> </p>\n",
    "link": "select/nest-remote-grid",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-remote-grid"
  },
  {
    "title": "Grid nested with a large amount of data.",
    "content": "For details, see the following example.",
    "link": "select/nest-radio-grid-much-data",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-radio-grid-much-data"
  },
  {
    "title": "Nested Radio Tree",
    "content": "For details, see the following example.",
    "link": "select/nest-radio-tree",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-radio-tree"
  },
  {
    "title": "Nested Multi-choice Tree",
    "content": "For details, see the following example.",
    "link": "select/nest-checkbox-tree",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-checkbox-tree"
  },
  {
    "title": "Searchable tree",
    "content": "For details, see the following example.",
    "link": "select/nest-filterable-tree",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "nest-filterable-tree"
  },
  {
    "title": "Configuration Mode",
    "content": "<p>Enable the cache function by setting <code>cache-op</code> and set options by <code>options</code>. </p>\n",
    "link": "select/cache-usage",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "cache-usage"
  },
  {
    "title": "Slot Mode",
    "content": "<p>If the list rendering component is set to <code>vue-option</code> through slot to output the drop-down list, you need to manually add the cache function. </p>\n",
    "link": "select/memoize-usage",
    "component": "Select Selector",
    "findIntroStr": "Select selector is a UI component that displays and selects data from a drop-down list box.",
    "demoId": "memoize-usage"
  }
]
