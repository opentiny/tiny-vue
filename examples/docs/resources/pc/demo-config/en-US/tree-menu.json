[
  {
    "title": "Basic Usage",
    "content": "<p>If no data is configured, data is read from the framework service by default. </p>\n",
    "link": "tree-menu/basic-usage",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "basic-usage"
  },
  {
    "title": "Data Source",
    "content": "<p>Set the data of the tree menu through <code>data</code>. </p>\n",
    "link": "tree-menu/data-resource",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "data-resource"
  },
  {
    "title": "Custom Menu Service Data",
    "content": "<p>Customize menu service data through <code>get-menu-data-sync</code> and directly return data. </p>\n",
    "link": "tree-menu/get-menu-data-sync",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "get-menu-data-sync"
  },
  {
    "title": "Excessive Text Omission",
    "content": "<p>You can use <code>ellipsis</code> to configure that the menu text is displayed as an ellipsis when it is too long. Use <code>prefix-icon</code> to customize the front icon. </p>\n",
    "link": "tree-menu/text-ellipsis",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "text-ellipsis"
  },
  {
    "title": "Excessive text is displayed in a new line.",
    "content": "<p>You can use <code>wrap</code> to configure that the menu text is displayed in a new line when the menu text is too long. The showTitle attribute is used to configure whether to display the title. The default value is true. \nYou can use <code>show-filter</code> to configure whether to display the search filter box. The default value is true. \nYou can use <code>show-title</code> to configure whether to display the title. The default value is true. </p>\n",
    "link": "tree-menu/text-wrap",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "text-wrap"
  },
  {
    "title": "The parent and child levels are not associated.",
    "content": "<p>The <code>check-strictly</code> is not associated with the parent and child levels. This parameter must be used together with <code>show-checkbox</code>. </p>\n",
    "link": "tree-menu/check-strictly",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "check-strictly"
  },
  {
    "title": "A node is expanded by default.",
    "content": "<p>Initially expand a node by setting <code>default-expanded-keys</code> . </p>\n",
    "link": "tree-menu/default-expanded-keys",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "default-expanded-keys"
  },
  {
    "title": "Lazy loading subnode",
    "content": "<p>You can use <code>lazy</code> to determine whether to lazy load subnodes. This method must be used together with the load method. </p>\n",
    "link": "tree-menu/lazy-load",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "lazy-load"
  },
  {
    "title": "Search Rule Configuration",
    "content": "<p>You can configure <code>filter-node-method</code> to configure the search rule. Fuzzy match is used by default. The following is an example of exact configuration. </p>\n",
    "link": "tree-menu/filter-node-method",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "filter-node-method"
  },
  {
    "title": "All menus are displayed by default.",
    "content": "<p>You can set the <code>default-expand-all</code> attribute to expand all menus by default. \n This parameter is selected by default through the <code>default-checked-keys</code> attribute. This parameter must be used together with <code>show-checkbox</code>, <code>node-key</code> . </p>\n",
    "link": "tree-menu/default-expand-all",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "default-expand-all"
  },
  {
    "title": "Customized empty data text",
    "content": "<p>You can use the <code>empty-text</code> attribute to configure the empty data display text. </p>\n",
    "link": "tree-menu/empty-text",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "empty-text"
  },
  {
    "title": "Drag Menu",
    "content": "<p>You can drag menus by setting the attribute <code>draggable</code>. </p>\n",
    "link": "tree-menu/can-draggable",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "can-draggable"
  },
  {
    "title": "Drag menu callback event",
    "content": "<p>Drag menu callback event, which is used together with <code>draggable</code>. </p>\n",
    "link": "tree-menu/event-allow-draggable",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "event-allow-draggable"
  },
  {
    "title": "Event triggered when a node is expanded",
    "content": "<p>Event triggered when a node is expanded</p>\n",
    "link": "tree-menu/event-node-expand",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "event-node-expand"
  },
  {
    "title": "Event triggered when a node is shut down",
    "content": "<p>Event triggered when a node is closed</p>\n",
    "link": "tree-menu/event-node-collapse",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "event-node-collapse"
  },
  {
    "title": "Callback when the node selection status changes",
    "content": "<p>Callback when the node selection status changes</p>\n",
    "link": "tree-menu/event-check-change",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "event-check-change"
  },
  {
    "title": "Click the text to expand the menu.",
    "content": "<p>You can click the text to expand the submenu through the <code>expand-on-click-node</code> attribute. </p>\n",
    "link": "tree-menu/expand-on-click-node",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "expand-on-click-node"
  },
  {
    "title": "horizontal indent",
    "content": "<p>You can use the <code>indent</code> attribute to control the horizontal indentation distance of a child relative to a parent menu. The unit is px. </p>\n",
    "link": "tree-menu/tree-menu-indent",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "tree-menu-indent"
  },
  {
    "title": "Accordance",
    "content": "<p>Set the accordion effect through <code>accordion</code>. </p>\n",
    "link": "tree-menu/accordion",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "accordion"
  },
  {
    "title": "Node can be selected",
    "content": "<p>The <code>show-checkbox</code> attribute can be configured to determine whether the node can be selected. </p>\n",
    "link": "tree-menu/show-checkbox",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode, which is applicable to a component of version customization.",
    "demoId": "show-checkbox"
  },
  {
    "title": "Custom search icon",
    "content": "<p>The <code>search-icon</code> attribute can be configured to customize the search icon</p>\n",
    "link": "tree-menu/search-icon",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "search-icon"
  },
  {
    "title": "Slot",
    "content": "<p>You can configure the default scope slot to display the menu content. </p>\n",
    "link": "tree-menu/tree-menu-slot",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "tree-menu-slot"
  },
  {
    "title": "Event",
    "content": "<p><code>current-change</code> Event triggered when the selected node changes. </p>\n",
    "link": "tree-menu/event-current-change",
    "component": "TreeMenu",
    "findIntroStr": "The menu is displayed in tree mode and is applicable to a component of version customization.",
    "demoId": "event-current-change"
  }
]
