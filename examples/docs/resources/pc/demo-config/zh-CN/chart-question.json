[{"title":"常见问题","content":"<h4>父元素的初始宽度未知</h4>\n<p>在一个初始宽度未知的容器内绘制图表时，因为无法获取宽度，所以图表会绘制失败，解决的办法是在容器宽度已知后，\n调用 echarts 的 resize 方法。\n通过 <code>cancel-resize-check</code> 是用于resize之前，检测组件元素是否存在，元素是否有宽高，没有则不resize。</p>\n","link":"chart/question/base","component":" Chart 图表","findIntroStr":"基于 eCharts 封装，一个纯 Javascript 的图表库。","demoId":"question-base"},{"title":"父元素的初始宽度未知","content":"详细用法参考如下示例","link":"chart/question/demo5","component":" Chart 图表","findIntroStr":"基于 eCharts 封装，一个纯 Javascript 的图表库。","demoId":"question-demo5"},{"title":"数据改变视图自动更新","content":"<p>图表是基于 Vue 开发的，同样支持 <code>双向数据绑定</code>，只要改变图表数据 <code>(示例中的 chartData.row)</code> 视图会自动更新。</p>\n","link":"chart/question/demo4","component":" Chart 图表","findIntroStr":"基于 eCharts 封装，一个纯 Javascript 的图表库。","demoId":"question-demo4"},{"title":"小数显示精度","content":"<p>处理数据类型时默认保留两位有效数字，但是当数字较小并设置为百分比类型时，这种方式会导致显示上的问题，例如：</p>\n","link":"chart/question/demo2","component":" Chart 图表","findIntroStr":"基于 eCharts 封装，一个纯 Javascript 的图表库。","demoId":"question-demo2"}]
